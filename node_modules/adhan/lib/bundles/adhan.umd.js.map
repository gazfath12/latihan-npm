{"version":3,"file":"adhan.umd.js","sources":["../../src/Madhab.ts","../../src/HighLatitudeRule.ts","../../src/Coordinates.ts","../../src/Rounding.ts","../../src/DateUtils.ts","../../src/MathUtils.ts","../../src/Shafaq.ts","../../src/Astronomical.ts","../../src/SolarCoordinates.ts","../../src/SolarTime.ts","../../src/PolarCircleResolution.ts","../../src/CalculationParameters.ts","../../src/CalculationMethod.ts","../../src/Prayer.ts","../../src/TimeComponents.ts","../../src/PrayerTimes.ts","../../src/Qibla.ts","../../src/SunnahTimes.ts"],"sourcesContent":["import { ValueOf } from './TypeUtils';\n\nexport const Madhab = {\n  Shafi: 'shafi',\n  Hanafi: 'hanafi',\n} as const;\n\nexport function shadowLength(madhab: ValueOf<typeof Madhab>) {\n  switch (madhab) {\n    case Madhab.Shafi:\n      return 1;\n    case Madhab.Hanafi:\n      return 2;\n    default:\n      throw 'Invalid Madhab';\n  }\n}\n","import type Coordinates from './Coordinates';\n\nconst HighLatitudeRule = {\n  MiddleOfTheNight: 'middleofthenight',\n  SeventhOfTheNight: 'seventhofthenight',\n  TwilightAngle: 'twilightangle',\n\n  recommended(coordinates: Coordinates) {\n    if (coordinates.latitude > 48) {\n      return HighLatitudeRule.SeventhOfTheNight;\n    } else {\n      return HighLatitudeRule.MiddleOfTheNight;\n    }\n  },\n} as const;\n\nexport default HighLatitudeRule;\n","export default class Coordinates {\n  constructor(public latitude: number, public longitude: number) {}\n}\n","export const Rounding = {\n  Nearest: 'nearest',\n  Up: 'up',\n  None: 'none',\n} as const;\n","import Astronomical from './Astronomical';\nimport { Rounding } from './Rounding';\nimport { ValueOf } from './TypeUtils';\n\nexport function dateByAddingDays(date: Date, days: number) {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate() + days;\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  return new Date(year, month, day, hours, minutes, seconds);\n}\n\nexport function dateByAddingMinutes(date: Date, minutes: number) {\n  return dateByAddingSeconds(date, minutes * 60);\n}\n\nexport function dateByAddingSeconds(date: Date, seconds: number) {\n  return new Date(date.getTime() + seconds * 1000);\n}\n\nexport function roundedMinute(\n  date: Date,\n  rounding: ValueOf<typeof Rounding> = Rounding.Nearest,\n) {\n  const seconds = date.getUTCSeconds();\n  let offset = seconds >= 30 ? 60 - seconds : -1 * seconds;\n  if (rounding === Rounding.Up) {\n    offset = 60 - seconds;\n  } else if (rounding === Rounding.None) {\n    offset = 0;\n  }\n\n  return dateByAddingSeconds(date, offset);\n}\n\nexport function dayOfYear(date: Date) {\n  let returnedDayOfYear = 0;\n  const feb = Astronomical.isLeapYear(date.getFullYear()) ? 29 : 28;\n  const months = [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  for (let i = 0; i < date.getMonth(); i++) {\n    returnedDayOfYear += months[i];\n  }\n\n  returnedDayOfYear += date.getDate();\n\n  return returnedDayOfYear;\n}\n\nexport function isValidDate(date: Date) {\n  return date instanceof Date && !isNaN(date.valueOf());\n}\n","export function degreesToRadians(degrees: number) {\n  return (degrees * Math.PI) / 180.0;\n}\n\nexport function radiansToDegrees(radians: number) {\n  return (radians * 180.0) / Math.PI;\n}\n\nexport function normalizeToScale(num: number, max: number) {\n  return num - max * Math.floor(num / max);\n}\n\nexport function unwindAngle(angle: number) {\n  return normalizeToScale(angle, 360.0);\n}\n\nexport function quadrantShiftAngle(angle: number) {\n  if (angle >= -180 && angle <= 180) {\n    return angle;\n  }\n\n  return angle - 360 * Math.round(angle / 360);\n}\n","// Shafaq is the twilight in the sky. Different madhabs define the appearance of\n// twilight differently. These values are used by the MoonsightingComittee method\n// for the different ways to calculate Isha.\nexport const Shafaq = {\n  // General is a combination of Ahmer and Abyad.\n  General: 'general',\n\n  // Ahmer means the twilight is the red glow in the sky. Used by the Shafi, Maliki, and Hanbali madhabs.\n  Ahmer: 'ahmer',\n\n  // Abyad means the twilight is the white glow in the sky. Used by the Hanafi madhab.\n  Abyad: 'abyad',\n} as const;\n","/* eslint-disable max-params, max-lines */\nimport Coordinates from './Coordinates';\nimport { dateByAddingSeconds } from './DateUtils';\nimport {\n  degreesToRadians,\n  normalizeToScale,\n  quadrantShiftAngle,\n  radiansToDegrees,\n  unwindAngle,\n} from './MathUtils';\nimport { Shafaq } from './Shafaq';\nimport { ValueOf } from './TypeUtils';\n\nconst Astronomical = {\n  /* The geometric mean longitude of the sun in degrees. */\n  meanSolarLongitude(julianCentury: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 163 */\n    const term1 = 280.4664567;\n    const term2 = 36000.76983 * T;\n    const term3 = 0.0003032 * Math.pow(T, 2);\n    const L0 = term1 + term2 + term3;\n    return unwindAngle(L0);\n  },\n\n  /* The geometric mean longitude of the moon in degrees. */\n  meanLunarLongitude(julianCentury: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = 218.3165;\n    const term2 = 481267.8813 * T;\n    const Lp = term1 + term2;\n    return unwindAngle(Lp);\n  },\n\n  ascendingLunarNodeLongitude(julianCentury: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = 125.04452;\n    const term2 = 1934.136261 * T;\n    const term3 = 0.0020708 * Math.pow(T, 2);\n    const term4 = Math.pow(T, 3) / 450000;\n    const Omega = term1 - term2 + term3 + term4;\n    return unwindAngle(Omega);\n  },\n\n  /* The mean anomaly of the sun. */\n  meanSolarAnomaly(julianCentury: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 163 */\n    const term1 = 357.52911;\n    const term2 = 35999.05029 * T;\n    const term3 = 0.0001537 * Math.pow(T, 2);\n    const M = term1 + term2 - term3;\n    return unwindAngle(M);\n  },\n\n  /* The Sun's equation of the center in degrees. */\n  solarEquationOfTheCenter(julianCentury: number, meanAnomaly: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 164 */\n    const Mrad = degreesToRadians(meanAnomaly);\n    const term1 =\n      (1.914602 - 0.004817 * T - 0.000014 * Math.pow(T, 2)) * Math.sin(Mrad);\n    const term2 = (0.019993 - 0.000101 * T) * Math.sin(2 * Mrad);\n    const term3 = 0.000289 * Math.sin(3 * Mrad);\n    return term1 + term2 + term3;\n  },\n\n  /* The apparent longitude of the Sun, referred to the\n        true equinox of the date. */\n  apparentSolarLongitude(julianCentury: number, meanLongitude: number) {\n    const T = julianCentury;\n    const L0 = meanLongitude;\n    /* Equation from Astronomical Algorithms page 164 */\n    const longitude =\n      L0 +\n      Astronomical.solarEquationOfTheCenter(\n        T,\n        Astronomical.meanSolarAnomaly(T),\n      );\n    const Omega = 125.04 - 1934.136 * T;\n    const Lambda =\n      longitude - 0.00569 - 0.00478 * Math.sin(degreesToRadians(Omega));\n    return unwindAngle(Lambda);\n  },\n\n  /* The mean obliquity of the ecliptic, formula\n        adopted by the International Astronomical Union.\n        Represented in degrees. */\n  meanObliquityOfTheEcliptic(julianCentury: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 147 */\n    const term1 = 23.439291;\n    const term2 = 0.013004167 * T;\n    const term3 = 0.0000001639 * Math.pow(T, 2);\n    const term4 = 0.0000005036 * Math.pow(T, 3);\n    return term1 - term2 - term3 + term4;\n  },\n\n  /* The mean obliquity of the ecliptic, corrected for\n        calculating the apparent position of the sun, in degrees. */\n  apparentObliquityOfTheEcliptic(\n    julianCentury: number,\n    meanObliquityOfTheEcliptic: number,\n  ) {\n    const T = julianCentury;\n    const Epsilon0 = meanObliquityOfTheEcliptic;\n    /* Equation from Astronomical Algorithms page 165 */\n    const O = 125.04 - 1934.136 * T;\n    return Epsilon0 + 0.00256 * Math.cos(degreesToRadians(O));\n  },\n\n  /* Mean sidereal time, the hour angle of the vernal equinox, in degrees. */\n  meanSiderealTime(julianCentury: number) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 165 */\n    const JD = T * 36525 + 2451545.0;\n    const term1 = 280.46061837;\n    const term2 = 360.98564736629 * (JD - 2451545);\n    const term3 = 0.000387933 * Math.pow(T, 2);\n    const term4 = Math.pow(T, 3) / 38710000;\n    const Theta = term1 + term2 + term3 - term4;\n    return unwindAngle(Theta);\n  },\n\n  nutationInLongitude(\n    julianCentury: number,\n    solarLongitude: number,\n    lunarLongitude: number,\n    ascendingNode: number,\n  ) {\n    const L0 = solarLongitude;\n    const Lp = lunarLongitude;\n    const Omega = ascendingNode;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = (-17.2 / 3600) * Math.sin(degreesToRadians(Omega));\n    const term2 = (1.32 / 3600) * Math.sin(2 * degreesToRadians(L0));\n    const term3 = (0.23 / 3600) * Math.sin(2 * degreesToRadians(Lp));\n    const term4 = (0.21 / 3600) * Math.sin(2 * degreesToRadians(Omega));\n    return term1 - term2 - term3 + term4;\n  },\n\n  nutationInObliquity(\n    julianCentury: number,\n    solarLongitude: number,\n    lunarLongitude: number,\n    ascendingNode: number,\n  ) {\n    const L0 = solarLongitude;\n    const Lp = lunarLongitude;\n    const Omega = ascendingNode;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = (9.2 / 3600) * Math.cos(degreesToRadians(Omega));\n    const term2 = (0.57 / 3600) * Math.cos(2 * degreesToRadians(L0));\n    const term3 = (0.1 / 3600) * Math.cos(2 * degreesToRadians(Lp));\n    const term4 = (0.09 / 3600) * Math.cos(2 * degreesToRadians(Omega));\n    return term1 + term2 + term3 - term4;\n  },\n\n  altitudeOfCelestialBody(\n    observerLatitude: number,\n    declination: number,\n    localHourAngle: number,\n  ) {\n    const Phi = observerLatitude;\n    const delta = declination;\n    const H = localHourAngle;\n    /* Equation from Astronomical Algorithms page 93 */\n    const term1 =\n      Math.sin(degreesToRadians(Phi)) * Math.sin(degreesToRadians(delta));\n    const term2 =\n      Math.cos(degreesToRadians(Phi)) *\n      Math.cos(degreesToRadians(delta)) *\n      Math.cos(degreesToRadians(H));\n    return radiansToDegrees(Math.asin(term1 + term2));\n  },\n\n  approximateTransit(\n    longitude: number,\n    siderealTime: number,\n    rightAscension: number,\n  ) {\n    const L = longitude;\n    const Theta0 = siderealTime;\n    const a2 = rightAscension;\n    /* Equation from page Astronomical Algorithms 102 */\n    const Lw = L * -1;\n    return normalizeToScale((a2 + Lw - Theta0) / 360, 1);\n  },\n\n  /* The time at which the sun is at its highest point in the sky (in universal time) */\n  correctedTransit(\n    approximateTransit: number,\n    longitude: number,\n    siderealTime: number,\n    rightAscension: number,\n    previousRightAscension: number,\n    nextRightAscension: number,\n  ) {\n    const m0 = approximateTransit;\n    const L = longitude;\n    const Theta0 = siderealTime;\n    const a2 = rightAscension;\n    const a1 = previousRightAscension;\n    const a3 = nextRightAscension;\n    /* Equation from page Astronomical Algorithms 102 */\n    const Lw = L * -1;\n    const Theta = unwindAngle(Theta0 + 360.985647 * m0);\n    const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m0));\n    const H = quadrantShiftAngle(Theta - Lw - a);\n    const dm = H / -360;\n    return (m0 + dm) * 24;\n  },\n\n  correctedHourAngle(\n    approximateTransit: number,\n    angle: number,\n    coordinates: Coordinates,\n    afterTransit: boolean,\n    siderealTime: number,\n    rightAscension: number,\n    previousRightAscension: number,\n    nextRightAscension: number,\n    declination: number,\n    previousDeclination: number,\n    nextDeclination: number,\n  ) {\n    const m0 = approximateTransit;\n    const h0 = angle;\n    const Theta0 = siderealTime;\n    const a2 = rightAscension;\n    const a1 = previousRightAscension;\n    const a3 = nextRightAscension;\n    const d2 = declination;\n    const d1 = previousDeclination;\n    const d3 = nextDeclination;\n\n    /* Equation from page Astronomical Algorithms 102 */\n    const Lw = coordinates.longitude * -1;\n    const term1 =\n      Math.sin(degreesToRadians(h0)) -\n      Math.sin(degreesToRadians(coordinates.latitude)) *\n        Math.sin(degreesToRadians(d2));\n    const term2 =\n      Math.cos(degreesToRadians(coordinates.latitude)) *\n      Math.cos(degreesToRadians(d2));\n    const H0 = radiansToDegrees(Math.acos(term1 / term2));\n    const m = afterTransit ? m0 + H0 / 360 : m0 - H0 / 360;\n    const Theta = unwindAngle(Theta0 + 360.985647 * m);\n    const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m));\n    const delta = Astronomical.interpolate(d2, d1, d3, m);\n    const H = Theta - Lw - a;\n    const h = Astronomical.altitudeOfCelestialBody(\n      coordinates.latitude,\n      delta,\n      H,\n    );\n    const term3 = h - h0;\n    const term4 =\n      360 *\n      Math.cos(degreesToRadians(delta)) *\n      Math.cos(degreesToRadians(coordinates.latitude)) *\n      Math.sin(degreesToRadians(H));\n    const dm = term3 / term4;\n    return (m + dm) * 24;\n  },\n\n  /* Interpolation of a value given equidistant\n        previous and next values and a factor\n        equal to the fraction of the interpolated\n        point's time over the time between values. */\n  interpolate(y2: number, y1: number, y3: number, n: number) {\n    /* Equation from Astronomical Algorithms page 24 */\n    const a = y2 - y1;\n    const b = y3 - y2;\n    const c = b - a;\n    return y2 + (n / 2) * (a + b + n * c);\n  },\n\n  /* Interpolation of three angles, accounting for\n        angle unwinding. */\n  interpolateAngles(y2: number, y1: number, y3: number, n: number) {\n    /* Equation from Astronomical Algorithms page 24 */\n    const a = unwindAngle(y2 - y1);\n    const b = unwindAngle(y3 - y2);\n    const c = b - a;\n    return y2 + (n / 2) * (a + b + n * c);\n  },\n\n  /* The Julian Day for the given Gregorian date components. */\n  julianDay(year: number, month: number, day: number, hours = 0) {\n    /* Equation from Astronomical Algorithms page 60 */\n\n    const trunc = Math.trunc;\n\n    const Y = trunc(month > 2 ? year : year - 1);\n    const M = trunc(month > 2 ? month : month + 12);\n    const D = day + hours / 24;\n\n    const A = trunc(Y / 100);\n    const B = trunc(2 - A + trunc(A / 4));\n\n    const i0 = trunc(365.25 * (Y + 4716));\n    const i1 = trunc(30.6001 * (M + 1));\n\n    return i0 + i1 + D + B - 1524.5;\n  },\n\n  /* Julian century from the epoch. */\n  julianCentury(julianDay: number) {\n    /* Equation from Astronomical Algorithms page 163 */\n    return (julianDay - 2451545.0) / 36525;\n  },\n\n  /* Whether or not a year is a leap year (has 366 days). */\n  isLeapYear(year: number) {\n    if (year % 4 !== 0) {\n      return false;\n    }\n\n    if (year % 100 === 0 && year % 400 !== 0) {\n      return false;\n    }\n\n    return true;\n  },\n\n  seasonAdjustedMorningTwilight(\n    latitude: number,\n    dayOfYear: number,\n    year: number,\n    sunrise: Date,\n  ) {\n    const a = 75 + (28.65 / 55.0) * Math.abs(latitude);\n    const b = 75 + (19.44 / 55.0) * Math.abs(latitude);\n    const c = 75 + (32.74 / 55.0) * Math.abs(latitude);\n    const d = 75 + (48.1 / 55.0) * Math.abs(latitude);\n\n    const adjustment = (function () {\n      const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n      if (dyy < 91) {\n        return a + ((b - a) / 91.0) * dyy;\n      } else if (dyy < 137) {\n        return b + ((c - b) / 46.0) * (dyy - 91);\n      } else if (dyy < 183) {\n        return c + ((d - c) / 46.0) * (dyy - 137);\n      } else if (dyy < 229) {\n        return d + ((c - d) / 46.0) * (dyy - 183);\n      } else if (dyy < 275) {\n        return c + ((b - c) / 46.0) * (dyy - 229);\n      } else {\n        return b + ((a - b) / 91.0) * (dyy - 275);\n      }\n    })();\n\n    return dateByAddingSeconds(sunrise, Math.round(adjustment * -60.0));\n  },\n\n  seasonAdjustedEveningTwilight(\n    latitude: number,\n    dayOfYear: number,\n    year: number,\n    sunset: Date,\n    shafaq: ValueOf<typeof Shafaq>,\n  ) {\n    let a, b, c, d;\n    if (shafaq === Shafaq.Ahmer) {\n      a = 62 + (17.4 / 55.0) * Math.abs(latitude);\n      b = 62 - (7.16 / 55.0) * Math.abs(latitude);\n      c = 62 + (5.12 / 55.0) * Math.abs(latitude);\n      d = 62 + (19.44 / 55.0) * Math.abs(latitude);\n    } else if (shafaq === Shafaq.Abyad) {\n      a = 75 + (25.6 / 55.0) * Math.abs(latitude);\n      b = 75 + (7.16 / 55.0) * Math.abs(latitude);\n      c = 75 + (36.84 / 55.0) * Math.abs(latitude);\n      d = 75 + (81.84 / 55.0) * Math.abs(latitude);\n    } else {\n      a = 75 + (25.6 / 55.0) * Math.abs(latitude);\n      b = 75 + (2.05 / 55.0) * Math.abs(latitude);\n      c = 75 - (9.21 / 55.0) * Math.abs(latitude);\n      d = 75 + (6.14 / 55.0) * Math.abs(latitude);\n    }\n\n    const adjustment = (function () {\n      const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n      if (dyy < 91) {\n        return a + ((b - a) / 91.0) * dyy;\n      } else if (dyy < 137) {\n        return b + ((c - b) / 46.0) * (dyy - 91);\n      } else if (dyy < 183) {\n        return c + ((d - c) / 46.0) * (dyy - 137);\n      } else if (dyy < 229) {\n        return d + ((c - d) / 46.0) * (dyy - 183);\n      } else if (dyy < 275) {\n        return c + ((b - c) / 46.0) * (dyy - 229);\n      } else {\n        return b + ((a - b) / 91.0) * (dyy - 275);\n      }\n    })();\n\n    return dateByAddingSeconds(sunset, Math.round(adjustment * 60.0));\n  },\n\n  daysSinceSolstice(dayOfYear: number, year: number, latitude: number) {\n    let daysSinceSolstice = 0;\n    const northernOffset = 10;\n    const southernOffset = Astronomical.isLeapYear(year) ? 173 : 172;\n    const daysInYear = Astronomical.isLeapYear(year) ? 366 : 365;\n\n    if (latitude >= 0) {\n      daysSinceSolstice = dayOfYear + northernOffset;\n      if (daysSinceSolstice >= daysInYear) {\n        daysSinceSolstice = daysSinceSolstice - daysInYear;\n      }\n    } else {\n      daysSinceSolstice = dayOfYear - southernOffset;\n      if (daysSinceSolstice < 0) {\n        daysSinceSolstice = daysSinceSolstice + daysInYear;\n      }\n    }\n\n    return daysSinceSolstice;\n  },\n};\n\nexport default Astronomical;\n","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default class SolarCoordinates {\n  declination: number;\n  rightAscension: number;\n  apparentSiderealTime: number;\n\n  constructor(julianDay: number) {\n    const T = Astronomical.julianCentury(julianDay);\n    const L0 = Astronomical.meanSolarLongitude(T);\n    const Lp = Astronomical.meanLunarLongitude(T);\n    const Omega = Astronomical.ascendingLunarNodeLongitude(T);\n    const Lambda = degreesToRadians(Astronomical.apparentSolarLongitude(T, L0));\n    const Theta0 = Astronomical.meanSiderealTime(T);\n    const dPsi = Astronomical.nutationInLongitude(T, L0, Lp, Omega);\n    const dEpsilon = Astronomical.nutationInObliquity(T, L0, Lp, Omega);\n    const Epsilon0 = Astronomical.meanObliquityOfTheEcliptic(T);\n    const EpsilonApparent = degreesToRadians(\n      Astronomical.apparentObliquityOfTheEcliptic(T, Epsilon0),\n    );\n\n    /* declination: The declination of the sun, the angle between\n            the rays of the Sun and the plane of the Earth's\n            equator, in degrees.\n            Equation from Astronomical Algorithms page 165 */\n    this.declination = radiansToDegrees(\n      Math.asin(Math.sin(EpsilonApparent) * Math.sin(Lambda)),\n    );\n\n    /* rightAscension: Right ascension of the Sun, the angular distance on the\n            celestial equator from the vernal equinox to the hour circle,\n            in degrees.\n            Equation from Astronomical Algorithms page 165 */\n    this.rightAscension = unwindAngle(\n      radiansToDegrees(\n        Math.atan2(\n          Math.cos(EpsilonApparent) * Math.sin(Lambda),\n          Math.cos(Lambda),\n        ),\n      ),\n    );\n\n    /* apparentSiderealTime: Apparent sidereal time, the hour angle of the vernal\n            equinox, in degrees.\n            Equation from Astronomical Algorithms page 88 */\n    this.apparentSiderealTime =\n      Theta0 +\n      (dPsi * 3600 * Math.cos(degreesToRadians(Epsilon0 + dEpsilon))) / 3600;\n  }\n}\n","import Astronomical from './Astronomical';\nimport type Coordinates from './Coordinates';\nimport { degreesToRadians, radiansToDegrees } from './MathUtils';\nimport SolarCoordinates from './SolarCoordinates';\n\nexport default class SolarTime {\n  observer: Coordinates;\n  solar: SolarCoordinates;\n  prevSolar: SolarCoordinates;\n  nextSolar: SolarCoordinates;\n  approxTransit: number;\n  transit: number;\n  sunrise: number;\n  sunset: number;\n\n  constructor(date: Date, coordinates: Coordinates) {\n    const julianDay = Astronomical.julianDay(\n      date.getFullYear(),\n      date.getMonth() + 1,\n      date.getDate(),\n      0,\n    );\n\n    this.observer = coordinates;\n    this.solar = new SolarCoordinates(julianDay);\n\n    this.prevSolar = new SolarCoordinates(julianDay - 1);\n    this.nextSolar = new SolarCoordinates(julianDay + 1);\n\n    const m0 = Astronomical.approximateTransit(\n      coordinates.longitude,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n    );\n    const solarAltitude = -50.0 / 60.0;\n\n    this.approxTransit = m0;\n\n    this.transit = Astronomical.correctedTransit(\n      m0,\n      coordinates.longitude,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n    );\n\n    this.sunrise = Astronomical.correctedHourAngle(\n      m0,\n      solarAltitude,\n      coordinates,\n      false,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n      this.solar.declination,\n      this.prevSolar.declination,\n      this.nextSolar.declination,\n    );\n\n    this.sunset = Astronomical.correctedHourAngle(\n      m0,\n      solarAltitude,\n      coordinates,\n      true,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n      this.solar.declination,\n      this.prevSolar.declination,\n      this.nextSolar.declination,\n    );\n  }\n\n  hourAngle(angle: number, afterTransit: boolean) {\n    return Astronomical.correctedHourAngle(\n      this.approxTransit,\n      angle,\n      this.observer,\n      afterTransit,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n      this.solar.declination,\n      this.prevSolar.declination,\n      this.nextSolar.declination,\n    );\n  }\n\n  afternoon(shadowLength: number) {\n    // TODO source shadow angle calculation\n    const tangent = Math.abs(this.observer.latitude - this.solar.declination);\n    const inverse = shadowLength + Math.tan(degreesToRadians(tangent));\n    const angle = radiansToDegrees(Math.atan(1.0 / inverse));\n    return this.hourAngle(angle, true);\n  }\n}\n","import Coordinates from './Coordinates';\nimport SolarTime from './SolarTime';\nimport { dateByAddingDays } from './DateUtils';\nimport { ValueOf } from './TypeUtils';\n\nexport const PolarCircleResolution = {\n  AqrabBalad: 'AqrabBalad',\n  AqrabYaum: 'AqrabYaum',\n  Unresolved: 'Unresolved',\n} as const;\n\nconst LATITUDE_VARIATION_STEP = 0.5; // Degrees to add/remove at each resolution step\nconst UNSAFE_LATITUDE = 65; // Based on https://en.wikipedia.org/wiki/Midnight_sun\n\nconst isValidSolarTime = (solarTime: SolarTime) =>\n  !isNaN(solarTime.sunrise) && !isNaN(solarTime.sunset);\n\nconst aqrabYaumResolver = (\n  coordinates: Coordinates,\n  date: Date,\n  daysAdded = 1,\n  direction = 1,\n): {\n  date: Date;\n  tomorrow: Date;\n  coordinates: Coordinates;\n  solarTime: SolarTime;\n  tomorrowSolarTime: SolarTime;\n} | null => {\n  if (daysAdded > Math.ceil(365 / 2)) {\n    return null;\n  }\n  const testDate = new Date(date.getTime());\n  testDate.setDate(testDate.getDate() + direction * daysAdded);\n  const tomorrow = dateByAddingDays(testDate, 1);\n  const solarTime = new SolarTime(testDate, coordinates);\n  const tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return aqrabYaumResolver(\n      coordinates,\n      date,\n      daysAdded + (direction > 0 ? 0 : 1),\n      -direction,\n    );\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates,\n    solarTime,\n    tomorrowSolarTime,\n  };\n};\n\nconst aqrabBaladResolver = (\n  coordinates: Coordinates,\n  date: Date,\n  latitude: number,\n): {\n  date: Date;\n  tomorrow: Date;\n  coordinates: Coordinates;\n  solarTime: SolarTime;\n  tomorrowSolarTime: SolarTime;\n} | null => {\n  const solarTime = new SolarTime(date, { ...coordinates, latitude });\n  const tomorrow = dateByAddingDays(date, 1);\n  const tomorrowSolarTime = new SolarTime(tomorrow, {\n    ...coordinates,\n    latitude,\n  });\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return Math.abs(latitude) >= UNSAFE_LATITUDE\n      ? aqrabBaladResolver(\n          coordinates,\n          date,\n          latitude - Math.sign(latitude) * LATITUDE_VARIATION_STEP,\n        )\n      : null;\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates: new Coordinates(latitude, coordinates.longitude),\n    solarTime,\n    tomorrowSolarTime,\n  };\n};\n\nexport const polarCircleResolvedValues = (\n  resolver: ValueOf<typeof PolarCircleResolution>,\n  date: Date,\n  coordinates: Coordinates,\n) => {\n  const defaultReturn = {\n    date,\n    tomorrow: dateByAddingDays(date, 1),\n    coordinates,\n    solarTime: new SolarTime(date, coordinates),\n    tomorrowSolarTime: new SolarTime(dateByAddingDays(date, 1), coordinates),\n  };\n\n  switch (resolver) {\n    case PolarCircleResolution.AqrabYaum: {\n      return aqrabYaumResolver(coordinates, date) || defaultReturn;\n    }\n    case PolarCircleResolution.AqrabBalad: {\n      const { latitude } = coordinates;\n      return (\n        aqrabBaladResolver(\n          coordinates,\n          date,\n          latitude - Math.sign(latitude) * LATITUDE_VARIATION_STEP,\n        ) || defaultReturn\n      );\n    }\n    default: {\n      return defaultReturn;\n    }\n  }\n};\n","import type CalculationMethod from './CalculationMethod';\nimport { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport { PolarCircleResolution } from './PolarCircleResolution';\nimport { Rounding } from './Rounding';\nimport { Shafaq } from './Shafaq';\nimport { ValueOf } from './TypeUtils';\n\nexport default class CalculationParameters {\n  // Madhab to determine how Asr is calculated.\n  madhab: ValueOf<typeof Madhab> = Madhab.Shafi;\n\n  // Rule to determine the earliest time for Fajr and latest time for Isha\n  // needed for high latitude locations where Fajr and Isha may not truly exist\n  // or may present a hardship unless bound to a reasonable time.\n  highLatitudeRule: ValueOf<typeof HighLatitudeRule> =\n    HighLatitudeRule.MiddleOfTheNight;\n\n  // Manual adjustments (in minutes) to be added to each prayer time.\n  adjustments = {\n    fajr: 0,\n    sunrise: 0,\n    dhuhr: 0,\n    asr: 0,\n    maghrib: 0,\n    isha: 0,\n  };\n\n  // Adjustments set by a calculation method. This value should not be manually modified.\n  methodAdjustments = {\n    fajr: 0,\n    sunrise: 0,\n    dhuhr: 0,\n    asr: 0,\n    maghrib: 0,\n    isha: 0,\n  };\n\n  // Rule to determine how to resolve prayer times inside the Polar Circle\n  // where daylight or night may persist for more than 24 hours depending\n  // on the season\n  polarCircleResolution: ValueOf<typeof PolarCircleResolution> =\n    PolarCircleResolution.Unresolved;\n\n  // How seconds are rounded when calculating prayer times\n  rounding: ValueOf<typeof Rounding> = Rounding.Nearest;\n\n  // Used by the MoonsightingCommittee method to determine how to calculate Isha\n  shafaq: ValueOf<typeof Shafaq> = Shafaq.General;\n\n  constructor(\n    // Name of the method, can be used to apply special behavior in calculations.\n    // This property should not be manually modified.\n    public method: null | keyof typeof CalculationMethod,\n    // Angle of the sun below the horizon used for calculating Fajr.\n    public fajrAngle = 0,\n    // Angle of the sun below the horizon used for calculating Isha.\n    public ishaAngle = 0,\n    // Minutes after Maghrib to determine time for Isha\n    // if this value is greater than 0 then ishaAngle is not used.\n    public ishaInterval = 0,\n    // Angle of the sun below the horizon used for calculating Maghrib.\n    // Only used by the Tehran method to account for lightness in the sky.\n    public maghribAngle = 0,\n  ) {\n    if (this.method === null) {\n      // we don't want a breaking change\n      this.method = 'Other';\n    }\n  }\n\n  nightPortions() {\n    switch (this.highLatitudeRule) {\n      case HighLatitudeRule.MiddleOfTheNight:\n        return { fajr: 1 / 2, isha: 1 / 2 };\n      case HighLatitudeRule.SeventhOfTheNight:\n        return { fajr: 1 / 7, isha: 1 / 7 };\n      case HighLatitudeRule.TwilightAngle:\n        return { fajr: this.fajrAngle / 60, isha: this.ishaAngle / 60 };\n      default:\n        throw `Invalid high latitude rule found when attempting to compute night portions: ${this.highLatitudeRule}`;\n    }\n  }\n}\n","import CalculationParameters from './CalculationParameters';\nimport { Rounding } from './Rounding';\n\nconst CalculationMethod = {\n  // Muslim World League\n  MuslimWorldLeague() {\n    const params = new CalculationParameters('MuslimWorldLeague', 18, 17);\n    params.methodAdjustments.dhuhr = 1;\n    return params;\n  },\n\n  // Egyptian General Authority of Survey\n  Egyptian() {\n    const params = new CalculationParameters('Egyptian', 19.5, 17.5);\n    params.methodAdjustments.dhuhr = 1;\n    return params;\n  },\n\n  // University of Islamic Sciences, Karachi\n  Karachi() {\n    const params = new CalculationParameters('Karachi', 18, 18);\n    params.methodAdjustments.dhuhr = 1;\n    return params;\n  },\n\n  // Umm al-Qura University, Makkah\n  UmmAlQura() {\n    return new CalculationParameters('UmmAlQura', 18.5, 0, 90);\n  },\n\n  // Dubai\n  Dubai() {\n    const params = new CalculationParameters('Dubai', 18.2, 18.2);\n    params.methodAdjustments = {\n      ...params.methodAdjustments,\n      sunrise: -3,\n      dhuhr: 3,\n      asr: 3,\n      maghrib: 3,\n    };\n    return params;\n  },\n\n  // Moonsighting Committee\n  MoonsightingCommittee() {\n    const params = new CalculationParameters('MoonsightingCommittee', 18, 18);\n    params.methodAdjustments = {\n      ...params.methodAdjustments,\n      dhuhr: 5,\n      maghrib: 3,\n    };\n\n    return params;\n  },\n\n  // ISNA\n  NorthAmerica() {\n    const params = new CalculationParameters('NorthAmerica', 15, 15);\n    params.methodAdjustments.dhuhr = 1;\n    return params;\n  },\n\n  // Kuwait\n  Kuwait() {\n    return new CalculationParameters('Kuwait', 18, 17.5);\n  },\n\n  // Qatar\n  Qatar() {\n    return new CalculationParameters('Qatar', 18, 0, 90);\n  },\n\n  // Singapore\n  Singapore() {\n    const params = new CalculationParameters('Singapore', 20, 18);\n    params.methodAdjustments.dhuhr = 1;\n    params.rounding = Rounding.Up;\n    return params;\n  },\n\n  // Institute of Geophysics, University of Tehran\n  Tehran() {\n    const params = new CalculationParameters('Tehran', 17.7, 14, 0, 4.5);\n    return params;\n  },\n\n  // Dianet\n  Turkey() {\n    const params = new CalculationParameters('Turkey', 18, 17);\n    params.methodAdjustments = {\n      ...params.methodAdjustments,\n      sunrise: -7,\n      dhuhr: 5,\n      asr: 4,\n      maghrib: 7,\n    };\n    return params;\n  },\n\n  // Other\n  Other() {\n    return new CalculationParameters('Other', 0, 0);\n  },\n} as const;\n\nexport default CalculationMethod;\n","const Prayer = {\n  Fajr: 'fajr',\n  Sunrise: 'sunrise',\n  Dhuhr: 'dhuhr',\n  Asr: 'asr',\n  Maghrib: 'maghrib',\n  Isha: 'isha',\n  None: 'none',\n} as const;\n\nexport default Prayer;\n","export default class TimeComponents {\n  hours: number;\n  minutes: number;\n  seconds: number;\n\n  constructor(num: number) {\n    this.hours = Math.floor(num);\n    this.minutes = Math.floor((num - this.hours) * 60);\n    this.seconds = Math.floor(\n      (num - (this.hours + this.minutes / 60)) * 60 * 60,\n    );\n    return this;\n  }\n\n  utcDate(year: number, month: number, date: number): Date {\n    return new Date(\n      Date.UTC(year, month, date, this.hours, this.minutes, this.seconds),\n    );\n  }\n}\n","import SolarTime from './SolarTime';\nimport TimeComponents from './TimeComponents';\nimport Prayer from './Prayer';\nimport Astronomical from './Astronomical';\nimport CalculationParameters from './CalculationParameters';\nimport Coordinates from './Coordinates';\nimport {\n  dateByAddingDays,\n  dateByAddingMinutes,\n  dateByAddingSeconds,\n  dayOfYear,\n  isValidDate,\n  roundedMinute,\n} from './DateUtils';\nimport { shadowLength } from './Madhab';\nimport {\n  PolarCircleResolution,\n  polarCircleResolvedValues,\n} from './PolarCircleResolution';\nimport { ValueOf } from './TypeUtils';\n\nexport default class PrayerTimes {\n  fajr: Date;\n  sunrise: Date;\n  dhuhr: Date;\n  asr: Date;\n  sunset: Date;\n  maghrib: Date;\n  isha: Date;\n\n  // eslint-disable-next-line complexity\n  constructor(\n    public coordinates: Coordinates,\n    public date: Date,\n    public calculationParameters: CalculationParameters,\n  ) {\n    let solarTime = new SolarTime(date, coordinates);\n\n    let fajrTime: Date;\n    let sunriseTime: Date;\n    let dhuhrTime: Date;\n    let asrTime: Date;\n    let sunsetTime: Date;\n    let maghribTime: Date;\n    let ishaTime: Date;\n\n    let nightFraction;\n\n    dhuhrTime = new TimeComponents(solarTime.transit).utcDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n    sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n    sunsetTime = new TimeComponents(solarTime.sunset).utcDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n    const tomorrow = dateByAddingDays(date, 1);\n    let tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n    const polarCircleResolver = calculationParameters.polarCircleResolution;\n    if (\n      (!isValidDate(sunriseTime) ||\n        !isValidDate(sunsetTime) ||\n        isNaN(tomorrowSolarTime.sunrise)) &&\n      polarCircleResolver !== PolarCircleResolution.Unresolved\n    ) {\n      const resolved = polarCircleResolvedValues(\n        polarCircleResolver,\n        date,\n        coordinates,\n      );\n      solarTime = resolved.solarTime;\n      tomorrowSolarTime = resolved.tomorrowSolarTime;\n      const dateComponents = [\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n      ] as const;\n\n      dhuhrTime = new TimeComponents(solarTime.transit).utcDate(\n        ...dateComponents,\n      );\n      sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(\n        ...dateComponents,\n      );\n      sunsetTime = new TimeComponents(solarTime.sunset).utcDate(\n        ...dateComponents,\n      );\n    }\n\n    // eslint-disable-next-line prefer-const\n    asrTime = new TimeComponents(\n      solarTime.afternoon(shadowLength(calculationParameters.madhab)),\n    ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n    const tomorrowSunrise = new TimeComponents(\n      tomorrowSolarTime.sunrise,\n    ).utcDate(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate());\n    const night = (Number(tomorrowSunrise) - Number(sunsetTime)) / 1000;\n\n    fajrTime = new TimeComponents(\n      solarTime.hourAngle(-1 * calculationParameters.fajrAngle, false),\n    ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // special case for moonsighting committee above latitude 55\n    if (\n      calculationParameters.method === 'MoonsightingCommittee' &&\n      coordinates.latitude >= 55\n    ) {\n      nightFraction = night / 7;\n      fajrTime = dateByAddingSeconds(sunriseTime, -nightFraction);\n    }\n\n    const safeFajr = (function () {\n      if (calculationParameters.method === 'MoonsightingCommittee') {\n        return Astronomical.seasonAdjustedMorningTwilight(\n          coordinates.latitude,\n          dayOfYear(date),\n          date.getFullYear(),\n          sunriseTime,\n        );\n      } else {\n        const portion = calculationParameters.nightPortions().fajr;\n        nightFraction = portion * night;\n        return dateByAddingSeconds(sunriseTime, -nightFraction);\n      }\n    })();\n\n    if (isNaN(fajrTime.getTime()) || safeFajr > fajrTime) {\n      fajrTime = safeFajr;\n    }\n\n    if (calculationParameters.ishaInterval > 0) {\n      ishaTime = dateByAddingMinutes(\n        sunsetTime,\n        calculationParameters.ishaInterval,\n      );\n    } else {\n      ishaTime = new TimeComponents(\n        solarTime.hourAngle(-1 * calculationParameters.ishaAngle, true),\n      ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n      // special case for moonsighting committee above latitude 55\n      if (\n        calculationParameters.method === 'MoonsightingCommittee' &&\n        coordinates.latitude >= 55\n      ) {\n        nightFraction = night / 7;\n        ishaTime = dateByAddingSeconds(sunsetTime, nightFraction);\n      }\n\n      const safeIsha = (function () {\n        if (calculationParameters.method === 'MoonsightingCommittee') {\n          return Astronomical.seasonAdjustedEveningTwilight(\n            coordinates.latitude,\n            dayOfYear(date),\n            date.getFullYear(),\n            sunsetTime,\n            calculationParameters.shafaq,\n          );\n        } else {\n          const portion = calculationParameters.nightPortions().isha;\n          nightFraction = portion * night;\n          return dateByAddingSeconds(sunsetTime, nightFraction);\n        }\n      })();\n\n      if (isNaN(ishaTime.getTime()) || safeIsha < ishaTime) {\n        ishaTime = safeIsha;\n      }\n    }\n\n    maghribTime = sunsetTime;\n    if (calculationParameters.maghribAngle) {\n      const angleBasedMaghrib = new TimeComponents(\n        solarTime.hourAngle(-1 * calculationParameters.maghribAngle, true),\n      ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n      if (sunsetTime < angleBasedMaghrib && ishaTime > angleBasedMaghrib) {\n        maghribTime = angleBasedMaghrib;\n      }\n    }\n\n    const fajrAdjustment =\n      (calculationParameters.adjustments.fajr || 0) +\n      (calculationParameters.methodAdjustments.fajr || 0);\n    const sunriseAdjustment =\n      (calculationParameters.adjustments.sunrise || 0) +\n      (calculationParameters.methodAdjustments.sunrise || 0);\n    const dhuhrAdjustment =\n      (calculationParameters.adjustments.dhuhr || 0) +\n      (calculationParameters.methodAdjustments.dhuhr || 0);\n    const asrAdjustment =\n      (calculationParameters.adjustments.asr || 0) +\n      (calculationParameters.methodAdjustments.asr || 0);\n    const maghribAdjustment =\n      (calculationParameters.adjustments.maghrib || 0) +\n      (calculationParameters.methodAdjustments.maghrib || 0);\n    const ishaAdjustment =\n      (calculationParameters.adjustments.isha || 0) +\n      (calculationParameters.methodAdjustments.isha || 0);\n\n    this.fajr = roundedMinute(\n      dateByAddingMinutes(fajrTime, fajrAdjustment),\n      calculationParameters.rounding,\n    );\n    this.sunrise = roundedMinute(\n      dateByAddingMinutes(sunriseTime, sunriseAdjustment),\n      calculationParameters.rounding,\n    );\n    this.dhuhr = roundedMinute(\n      dateByAddingMinutes(dhuhrTime, dhuhrAdjustment),\n      calculationParameters.rounding,\n    );\n    this.asr = roundedMinute(\n      dateByAddingMinutes(asrTime, asrAdjustment),\n      calculationParameters.rounding,\n    );\n    this.sunset = roundedMinute(sunsetTime, calculationParameters.rounding);\n    this.maghrib = roundedMinute(\n      dateByAddingMinutes(maghribTime, maghribAdjustment),\n      calculationParameters.rounding,\n    );\n    this.isha = roundedMinute(\n      dateByAddingMinutes(ishaTime, ishaAdjustment),\n      calculationParameters.rounding,\n    );\n  }\n\n  timeForPrayer(prayer: ValueOf<typeof Prayer>) {\n    if (prayer === Prayer.Fajr) {\n      return this.fajr;\n    } else if (prayer === Prayer.Sunrise) {\n      return this.sunrise;\n    } else if (prayer === Prayer.Dhuhr) {\n      return this.dhuhr;\n    } else if (prayer === Prayer.Asr) {\n      return this.asr;\n    } else if (prayer === Prayer.Maghrib) {\n      return this.maghrib;\n    } else if (prayer === Prayer.Isha) {\n      return this.isha;\n    } else {\n      return null;\n    }\n  }\n\n  currentPrayer(date = new Date()) {\n    if (date >= this.isha) {\n      return Prayer.Isha;\n    } else if (date >= this.maghrib) {\n      return Prayer.Maghrib;\n    } else if (date >= this.asr) {\n      return Prayer.Asr;\n    } else if (date >= this.dhuhr) {\n      return Prayer.Dhuhr;\n    } else if (date >= this.sunrise) {\n      return Prayer.Sunrise;\n    } else if (date >= this.fajr) {\n      return Prayer.Fajr;\n    } else {\n      return Prayer.None;\n    }\n  }\n\n  nextPrayer(date = new Date()) {\n    if (date >= this.isha) {\n      return Prayer.None;\n    } else if (date >= this.maghrib) {\n      return Prayer.Isha;\n    } else if (date >= this.asr) {\n      return Prayer.Maghrib;\n    } else if (date >= this.dhuhr) {\n      return Prayer.Asr;\n    } else if (date >= this.sunrise) {\n      return Prayer.Dhuhr;\n    } else if (date >= this.fajr) {\n      return Prayer.Sunrise;\n    } else {\n      return Prayer.Fajr;\n    }\n  }\n}\n","import Coordinates from './Coordinates';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default function qibla(coordinates: Coordinates) {\n  const makkah = new Coordinates(21.4225241, 39.8261818);\n\n  // Equation from \"Spherical Trigonometry For the use of colleges and schools\" page 50\n  const term1 = Math.sin(\n    degreesToRadians(makkah.longitude) -\n      degreesToRadians(coordinates.longitude),\n  );\n  const term2 =\n    Math.cos(degreesToRadians(coordinates.latitude)) *\n    Math.tan(degreesToRadians(makkah.latitude));\n  const term3 =\n    Math.sin(degreesToRadians(coordinates.latitude)) *\n    Math.cos(\n      degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude),\n    );\n  const angle = Math.atan2(term1, term2 - term3);\n\n  return unwindAngle(radiansToDegrees(angle));\n}\n","import {\n  dateByAddingDays,\n  dateByAddingSeconds,\n  roundedMinute,\n} from './DateUtils';\nimport PrayerTimes from './PrayerTimes';\n\nexport default class SunnahTimes {\n  middleOfTheNight: Date;\n  lastThirdOfTheNight: Date;\n\n  constructor(prayerTimes: PrayerTimes) {\n    const date = prayerTimes.date;\n    const nextDay = dateByAddingDays(date, 1);\n    const nextDayPrayerTimes = new PrayerTimes(\n      prayerTimes.coordinates,\n      nextDay,\n      prayerTimes.calculationParameters,\n    );\n\n    const nightDuration =\n      (nextDayPrayerTimes.fajr.getTime() - prayerTimes.maghrib.getTime()) /\n      1000.0;\n\n    this.middleOfTheNight = roundedMinute(\n      dateByAddingSeconds(prayerTimes.maghrib, nightDuration / 2),\n    );\n    this.lastThirdOfTheNight = roundedMinute(\n      dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (2 / 3)),\n    );\n  }\n}\n"],"names":["Madhab","Shafi","Hanafi","shadowLength","madhab","HighLatitudeRule","MiddleOfTheNight","SeventhOfTheNight","TwilightAngle","recommended","coordinates","latitude","Coordinates","longitude","Rounding","Nearest","Up","None","dateByAddingDays","date","days","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","Date","dateByAddingMinutes","dateByAddingSeconds","getTime","roundedMinute","rounding","getUTCSeconds","offset","dayOfYear","returnedDayOfYear","feb","Astronomical","isLeapYear","months","i","isValidDate","isNaN","valueOf","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","normalizeToScale","num","max","floor","unwindAngle","angle","quadrantShiftAngle","round","Shafaq","General","Ahmer","Abyad","meanSolarLongitude","julianCentury","T","term1","term2","term3","pow","L0","meanLunarLongitude","Lp","ascendingLunarNodeLongitude","term4","Omega","meanSolarAnomaly","M","solarEquationOfTheCenter","meanAnomaly","Mrad","sin","apparentSolarLongitude","meanLongitude","Lambda","meanObliquityOfTheEcliptic","apparentObliquityOfTheEcliptic","Epsilon0","O","cos","meanSiderealTime","JD","Theta","nutationInLongitude","solarLongitude","lunarLongitude","ascendingNode","nutationInObliquity","altitudeOfCelestialBody","observerLatitude","declination","localHourAngle","Phi","delta","H","asin","approximateTransit","siderealTime","rightAscension","L","Theta0","a2","Lw","correctedTransit","previousRightAscension","nextRightAscension","m0","a1","a3","a","interpolateAngles","dm","correctedHourAngle","afterTransit","previousDeclination","nextDeclination","h0","d2","d1","d3","H0","acos","m","interpolate","h","y2","y1","y3","n","b","c","julianDay","trunc","Y","D","A","B","i0","i1","seasonAdjustedMorningTwilight","sunrise","abs","d","adjustment","dyy","daysSinceSolstice","seasonAdjustedEveningTwilight","sunset","shafaq","northernOffset","southernOffset","daysInYear","SolarCoordinates","dPsi","dEpsilon","EpsilonApparent","atan2","apparentSiderealTime","SolarTime","observer","solar","prevSolar","nextSolar","solarAltitude","approxTransit","transit","tangent","inverse","tan","atan","hourAngle","PolarCircleResolution","AqrabBalad","AqrabYaum","Unresolved","LATITUDE_VARIATION_STEP","UNSAFE_LATITUDE","isValidSolarTime","solarTime","aqrabYaumResolver","daysAdded","direction","ceil","testDate","setDate","tomorrow","tomorrowSolarTime","aqrabBaladResolver","sign","polarCircleResolvedValues","resolver","defaultReturn","CalculationParameters","method","fajrAngle","ishaAngle","ishaInterval","maghribAngle","fajr","dhuhr","asr","maghrib","isha","highLatitudeRule","CalculationMethod","MuslimWorldLeague","params","methodAdjustments","Egyptian","Karachi","UmmAlQura","Dubai","MoonsightingCommittee","NorthAmerica","Kuwait","Qatar","Singapore","Tehran","Turkey","Other","Prayer","Fajr","Sunrise","Dhuhr","Asr","Maghrib","Isha","TimeComponents","UTC","PrayerTimes","calculationParameters","fajrTime","sunriseTime","dhuhrTime","asrTime","sunsetTime","maghribTime","ishaTime","nightFraction","utcDate","polarCircleResolver","polarCircleResolution","resolved","dateComponents","afternoon","tomorrowSunrise","night","Number","safeFajr","portion","nightPortions","safeIsha","angleBasedMaghrib","fajrAdjustment","adjustments","sunriseAdjustment","dhuhrAdjustment","asrAdjustment","maghribAdjustment","ishaAdjustment","prayer","qibla","makkah","SunnahTimes","prayerTimes","nextDay","nextDayPrayerTimes","nightDuration","middleOfTheNight","lastThirdOfTheNight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,MAAMA,MAAM,GAAG;EACpBC,EAAAA,KAAK,EAAE,OADa;EAEpBC,EAAAA,MAAM,EAAE,QAAA;EAFY,EAAf;EAKA,SAASC,YAAT,CAAsBC,MAAtB,EAAsD;EAC3D,EAAA,QAAQA,MAAR;EACE,IAAKJ,KAAAA,MAAM,CAACC,KAAZ;EACE,MAAA,OAAO,CAAP,CAAA;;EACF,IAAKD,KAAAA,MAAM,CAACE,MAAZ;EACE,MAAA,OAAO,CAAP,CAAA;;EACF,IAAA;EACE,MAAA,MAAM,gBAAN,CAAA;EANJ,GAAA;EAQD;;ACdD,MAAMG,gBAAgB,GAAG;EACvBC,EAAAA,gBAAgB,EAAE,kBADK;EAEvBC,EAAAA,iBAAiB,EAAE,mBAFI;EAGvBC,EAAAA,aAAa,EAAE,eAHQ;EAKvBC,EAAAA,WALuB,EAKXC,SAAAA,WAAAA,CAAAA,WALW,EAKe;EACpC,IAAA,IAAIA,WAAW,CAACC,QAAZ,GAAuB,EAA3B,EAA+B;EAC7B,MAAON,OAAAA,gBAAgB,CAACE,iBAAxB,CAAA;EACD,KAFD,MAEO;EACL,MAAOF,OAAAA,gBAAgB,CAACC,gBAAxB,CAAA;EACD,KAAA;EACF,GAAA;EAXsB;;ACFJM,MAAAA,2BACnB,YAAA,CAAA,SAAA,WAAA,CAAmBD,QAAnB,EAA4CE,SAA5C,EAA+D;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;;EAAA,EAA5CF,IAAAA,CAAAA,QAA4C,GAA5CA,QAA4C,CAAA;EAAA,EAAnBE,IAAAA,CAAAA,SAAmB,GAAnBA,SAAmB,CAAA;EAAE;;ACD5D,MAAMC,QAAQ,GAAG;EACtBC,EAAAA,OAAO,EAAE,SADa;EAEtBC,EAAAA,EAAE,EAAE,IAFkB;EAGtBC,EAAAA,IAAI,EAAE,MAAA;EAHgB;;ECIjB,SAASC,gBAAT,CAA0BC,IAA1B,EAAsCC,IAAtC,EAAoD;EACzD,EAAA,IAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb,CAAA;EACA,EAAA,IAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAd,CAAA;EACA,EAAA,IAAMC,GAAG,GAAGN,IAAI,CAACO,OAAL,KAAiBN,IAA7B,CAAA;EACA,EAAA,IAAMO,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAd,CAAA;EACA,EAAA,IAAMC,OAAO,GAAGV,IAAI,CAACW,UAAL,EAAhB,CAAA;EACA,EAAA,IAAMC,OAAO,GAAGZ,IAAI,CAACa,UAAL,EAAhB,CAAA;EACA,EAAA,OAAO,IAAIC,IAAJ,CAASZ,IAAT,EAAeE,KAAf,EAAsBE,GAAtB,EAA2BE,KAA3B,EAAkCE,OAAlC,EAA2CE,OAA3C,CAAP,CAAA;EACD,CAAA;EAEM,SAASG,mBAAT,CAA6Bf,IAA7B,EAAyCU,OAAzC,EAA0D;EAC/D,EAAA,OAAOM,mBAAmB,CAAChB,IAAD,EAAOU,OAAO,GAAG,EAAjB,CAA1B,CAAA;EACD,CAAA;EAEM,SAASM,mBAAT,CAA6BhB,IAA7B,EAAyCY,OAAzC,EAA0D;EAC/D,EAAO,OAAA,IAAIE,IAAJ,CAASd,IAAI,CAACiB,OAAL,EAAiBL,GAAAA,OAAO,GAAG,IAApC,CAAP,CAAA;EACD,CAAA;EAEM,SAASM,aAAT,CACLlB,IADK,EAGL;EAAA,EAAA,IADAmB,QACA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GADqCxB,QAAQ,CAACC,OAC9C,CAAA;EACA,EAAA,IAAMgB,OAAO,GAAGZ,IAAI,CAACoB,aAAL,EAAhB,CAAA;EACA,EAAA,IAAIC,MAAM,GAAGT,OAAO,IAAI,EAAX,GAAgB,EAAKA,GAAAA,OAArB,GAA+B,CAAC,CAAD,GAAKA,OAAjD,CAAA;;EACA,EAAA,IAAIO,QAAQ,KAAKxB,QAAQ,CAACE,EAA1B,EAA8B;EAC5BwB,IAAAA,MAAM,GAAG,EAAA,GAAKT,OAAd,CAAA;EACD,GAFD,MAEO,IAAIO,QAAQ,KAAKxB,QAAQ,CAACG,IAA1B,EAAgC;EACrCuB,IAAAA,MAAM,GAAG,CAAT,CAAA;EACD,GAAA;;EAED,EAAA,OAAOL,mBAAmB,CAAChB,IAAD,EAAOqB,MAAP,CAA1B,CAAA;EACD,CAAA;EAEM,SAASC,SAAT,CAAmBtB,IAAnB,EAA+B;EACpC,EAAIuB,IAAAA,iBAAiB,GAAG,CAAxB,CAAA;EACA,EAAA,IAAMC,GAAG,GAAGC,YAAY,CAACC,UAAb,CAAwB1B,IAAI,CAACG,WAAL,EAAxB,CAA8C,GAAA,EAA9C,GAAmD,EAA/D,CAAA;EACA,EAAMwB,IAAAA,MAAM,GAAG,CAAC,EAAD,EAAKH,GAAL,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,CAAf,CAAA;;EACA,EAAA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,IAAI,CAACK,QAAL,EAApB,EAAqCuB,CAAC,EAAtC,EAA0C;EACxCL,IAAAA,iBAAiB,IAAII,MAAM,CAACC,CAAD,CAA3B,CAAA;EACD,GAAA;;EAEDL,EAAAA,iBAAiB,IAAIvB,IAAI,CAACO,OAAL,EAArB,CAAA;EAEA,EAAA,OAAOgB,iBAAP,CAAA;EACD,CAAA;EAEM,SAASM,WAAT,CAAqB7B,IAArB,EAAiC;EACtC,EAAOA,OAAAA,IAAI,YAAYc,IAAhB,IAAwB,CAACgB,KAAK,CAAC9B,IAAI,CAAC+B,OAAL,EAAD,CAArC,CAAA;EACD;;ECpDM,SAASC,gBAAT,CAA0BC,OAA1B,EAA2C;EAChD,EAAA,OAAQA,OAAO,GAAGC,IAAI,CAACC,EAAhB,GAAsB,KAA7B,CAAA;EACD,CAAA;EAEM,SAASC,gBAAT,CAA0BC,OAA1B,EAA2C;EAChD,EAAA,OAAQA,OAAO,GAAG,KAAX,GAAoBH,IAAI,CAACC,EAAhC,CAAA;EACD,CAAA;EAEM,SAASG,gBAAT,CAA0BC,GAA1B,EAAuCC,GAAvC,EAAoD;EACzD,EAAOD,OAAAA,GAAG,GAAGC,GAAG,GAAGN,IAAI,CAACO,KAAL,CAAWF,GAAG,GAAGC,GAAjB,CAAnB,CAAA;EACD,CAAA;EAEM,SAASE,WAAT,CAAqBC,KAArB,EAAoC;EACzC,EAAA,OAAOL,gBAAgB,CAACK,KAAD,EAAQ,KAAR,CAAvB,CAAA;EACD,CAAA;EAEM,SAASC,kBAAT,CAA4BD,KAA5B,EAA2C;EAChD,EAAIA,IAAAA,KAAK,IAAI,CAAC,GAAV,IAAiBA,KAAK,IAAI,GAA9B,EAAmC;EACjC,IAAA,OAAOA,KAAP,CAAA;EACD,GAAA;;EAED,EAAOA,OAAAA,KAAK,GAAG,GAAA,GAAMT,IAAI,CAACW,KAAL,CAAWF,KAAK,GAAG,GAAnB,CAArB,CAAA;EACD;;ECtBD;EACA;EACA;AACO,MAAMG,MAAM,GAAG;EACpB;EACAC,EAAAA,OAAO,EAAE,SAFW;EAIpB;EACAC,EAAAA,KAAK,EAAE,OALa;EAOpB;EACAC,EAAAA,KAAK,EAAE,OAAA;EARa;;ECHtB;EAaA,IAAMxB,YAAY,GAAG;EACnB;EACAyB,EAAAA,kBAFmB,EAEAC,SAAAA,kBAAAA,CAAAA,aAFA,EAEuB;EACxC,IAAMC,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAME,IAAAA,KAAK,GAAG,WAAd,CAAA;EACA,IAAMC,IAAAA,KAAK,GAAG,WAAA,GAAcF,CAA5B,CAAA;EACA,IAAMG,IAAAA,KAAK,GAAG,SAAA,GAAYrB,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA1B,CAAA;EACA,IAAA,IAAMK,EAAE,GAAGJ,KAAK,GAAGC,KAAR,GAAgBC,KAA3B,CAAA;EACA,IAAOb,OAAAA,WAAW,CAACe,EAAD,CAAlB,CAAA;EACD,GAVkB;;EAYnB;EACAC,EAAAA,kBAbmB,EAaAP,SAAAA,kBAAAA,CAAAA,aAbA,EAauB;EACxC,IAAMC,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAME,IAAAA,KAAK,GAAG,QAAd,CAAA;EACA,IAAMC,IAAAA,KAAK,GAAG,WAAA,GAAcF,CAA5B,CAAA;EACA,IAAA,IAAMO,EAAE,GAAGN,KAAK,GAAGC,KAAnB,CAAA;EACA,IAAOZ,OAAAA,WAAW,CAACiB,EAAD,CAAlB,CAAA;EACD,GApBkB;EAsBnBC,EAAAA,2BAtBmB,EAsBST,SAAAA,2BAAAA,CAAAA,aAtBT,EAsBgC;EACjD,IAAMC,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAME,IAAAA,KAAK,GAAG,SAAd,CAAA;EACA,IAAMC,IAAAA,KAAK,GAAG,WAAA,GAAcF,CAA5B,CAAA;EACA,IAAMG,IAAAA,KAAK,GAAG,SAAA,GAAYrB,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA1B,CAAA;EACA,IAAMS,IAAAA,KAAK,GAAG3B,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAAA,GAAiB,MAA/B,CAAA;EACA,IAAMU,IAAAA,KAAK,GAAGT,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAAtC,CAAA;EACA,IAAOnB,OAAAA,WAAW,CAACoB,KAAD,CAAlB,CAAA;EACD,GA/BkB;;EAiCnB;EACAC,EAAAA,gBAlCmB,EAkCFZ,SAAAA,gBAAAA,CAAAA,aAlCE,EAkCqB;EACtC,IAAMC,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAME,IAAAA,KAAK,GAAG,SAAd,CAAA;EACA,IAAMC,IAAAA,KAAK,GAAG,WAAA,GAAcF,CAA5B,CAAA;EACA,IAAMG,IAAAA,KAAK,GAAG,SAAA,GAAYrB,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA1B,CAAA;EACA,IAAA,IAAMY,CAAC,GAAGX,KAAK,GAAGC,KAAR,GAAgBC,KAA1B,CAAA;EACA,IAAOb,OAAAA,WAAW,CAACsB,CAAD,CAAlB,CAAA;EACD,GA1CkB;;EA4CnB;EACAC,EAAAA,wBA7CmB,EAAA,SAAA,wBAAA,CA6CMd,aA7CN,EA6C6Be,WA7C7B,EA6CkD;EACnE,IAAMd,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAA,IAAMgB,IAAI,GAAGnC,gBAAgB,CAACkC,WAAD,CAA7B,CAAA;EACA,IAAMb,IAAAA,KAAK,GACT,CAAC,QAAA,GAAW,WAAWD,CAAtB,GAA0B,QAAWlB,GAAAA,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAAtC,IAAwDlB,IAAI,CAACkC,GAAL,CAASD,IAAT,CAD1D,CAAA;EAEA,IAAA,IAAMb,KAAK,GAAG,CAAC,QAAA,GAAW,QAAWF,GAAAA,CAAvB,IAA4BlB,IAAI,CAACkC,GAAL,CAAS,CAAA,GAAID,IAAb,CAA1C,CAAA;EACA,IAAMZ,IAAAA,KAAK,GAAG,QAAWrB,GAAAA,IAAI,CAACkC,GAAL,CAAS,CAAID,GAAAA,IAAb,CAAzB,CAAA;EACA,IAAA,OAAOd,KAAK,GAAGC,KAAR,GAAgBC,KAAvB,CAAA;EACD,GAtDkB;;EAwDnB;EACF;EACEc,EAAAA,sBA1DmB,EAAA,SAAA,sBAAA,CA0DIlB,aA1DJ,EA0D2BmB,aA1D3B,EA0DkD;EACnE,IAAMlB,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA,IAAMM,IAAAA,EAAE,GAAGa,aAAX,CAAA;EACA;;EACA,IAAA,IAAM5E,SAAS,GACb+D,EAAE,GACFhC,YAAY,CAACwC,wBAAb,CACEb,CADF,EAEE3B,YAAY,CAACsC,gBAAb,CAA8BX,CAA9B,CAFF,CAFF,CAAA;EAMA,IAAA,IAAMU,KAAK,GAAG,MAAS,GAAA,QAAA,GAAWV,CAAlC,CAAA;EACA,IAAA,IAAMmB,MAAM,GACV7E,SAAS,GAAG,OAAZ,GAAsB,OAAA,GAAUwC,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAAC8B,KAAD,CAAzB,CADlC,CAAA;EAEA,IAAOpB,OAAAA,WAAW,CAAC6B,MAAD,CAAlB,CAAA;EACD,GAxEkB;;EA0EnB;EACF;EACA;EACEC,EAAAA,0BA7EmB,EA6EQrB,SAAAA,0BAAAA,CAAAA,aA7ER,EA6E+B;EAChD,IAAMC,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAME,IAAAA,KAAK,GAAG,SAAd,CAAA;EACA,IAAMC,IAAAA,KAAK,GAAG,WAAA,GAAcF,CAA5B,CAAA;EACA,IAAMG,IAAAA,KAAK,GAAG,YAAA,GAAerB,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA7B,CAAA;EACA,IAAMS,IAAAA,KAAK,GAAG,YAAA,GAAe3B,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA7B,CAAA;EACA,IAAA,OAAOC,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAA/B,CAAA;EACD,GArFkB;;EAuFnB;EACF;EACEY,EAAAA,8BAzFmB,EAAA,SAAA,8BAAA,CA0FjBtB,aA1FiB,EA2FjBqB,0BA3FiB,EA4FjB;EACA,IAAMpB,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA,IAAMuB,IAAAA,QAAQ,GAAGF,0BAAjB,CAAA;EACA;;EACA,IAAA,IAAMG,CAAC,GAAG,MAAS,GAAA,QAAA,GAAWvB,CAA9B,CAAA;EACA,IAAOsB,OAAAA,QAAQ,GAAG,OAAA,GAAUxC,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAAC2C,CAAD,CAAzB,CAA5B,CAAA;EACD,GAlGkB;;EAoGnB;EACAE,EAAAA,gBArGmB,EAqGF1B,SAAAA,gBAAAA,CAAAA,aArGE,EAqGqB;EACtC,IAAMC,IAAAA,CAAC,GAAGD,aAAV,CAAA;EACA;;EACA,IAAA,IAAM2B,EAAE,GAAG1B,CAAC,GAAG,KAAJ,GAAY,SAAvB,CAAA;EACA,IAAMC,IAAAA,KAAK,GAAG,YAAd,CAAA;EACA,IAAA,IAAMC,KAAK,GAAG,eAAA,IAAmBwB,EAAE,GAAG,OAAxB,CAAd,CAAA;EACA,IAAMvB,IAAAA,KAAK,GAAG,WAAA,GAAcrB,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAA5B,CAAA;EACA,IAAMS,IAAAA,KAAK,GAAG3B,IAAI,CAACsB,GAAL,CAASJ,CAAT,EAAY,CAAZ,CAAA,GAAiB,QAA/B,CAAA;EACA,IAAM2B,IAAAA,KAAK,GAAG1B,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAAtC,CAAA;EACA,IAAOnB,OAAAA,WAAW,CAACqC,KAAD,CAAlB,CAAA;EACD,GA/GkB;EAiHnBC,EAAAA,mBAjHmB,+BAkHjB7B,aAlHiB,EAmHjB8B,cAnHiB,EAoHjBC,cApHiB,EAqHjBC,aArHiB,EAsHjB;EACA,IAAM1B,IAAAA,EAAE,GAAGwB,cAAX,CAAA;EACA,IAAMtB,IAAAA,EAAE,GAAGuB,cAAX,CAAA;EACA,IAAMpB,IAAAA,KAAK,GAAGqB,aAAd,CAAA;EACA;;EACA,IAAA,IAAM9B,KAAK,GAAI,CAAC,IAAD,GAAQ,IAAT,GAAiBnB,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAAC8B,KAAD,CAAzB,CAA/B,CAAA;EACA,IAAA,IAAMR,KAAK,GAAI,IAAO,GAAA,IAAR,GAAgBpB,IAAI,CAACkC,GAAL,CAAS,CAAIpC,GAAAA,gBAAgB,CAACyB,EAAD,CAA7B,CAA9B,CAAA;EACA,IAAA,IAAMF,KAAK,GAAI,IAAO,GAAA,IAAR,GAAgBrB,IAAI,CAACkC,GAAL,CAAS,CAAIpC,GAAAA,gBAAgB,CAAC2B,EAAD,CAA7B,CAA9B,CAAA;EACA,IAAA,IAAME,KAAK,GAAI,IAAO,GAAA,IAAR,GAAgB3B,IAAI,CAACkC,GAAL,CAAS,CAAIpC,GAAAA,gBAAgB,CAAC8B,KAAD,CAA7B,CAA9B,CAAA;EACA,IAAA,OAAOT,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAA/B,CAAA;EACD,GAhIkB;EAkInBuB,EAAAA,mBAlImB,+BAmIjBjC,aAnIiB,EAoIjB8B,cApIiB,EAqIjBC,cArIiB,EAsIjBC,aAtIiB,EAuIjB;EACA,IAAM1B,IAAAA,EAAE,GAAGwB,cAAX,CAAA;EACA,IAAMtB,IAAAA,EAAE,GAAGuB,cAAX,CAAA;EACA,IAAMpB,IAAAA,KAAK,GAAGqB,aAAd,CAAA;EACA;;EACA,IAAA,IAAM9B,KAAK,GAAI,GAAM,GAAA,IAAP,GAAenB,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAAC8B,KAAD,CAAzB,CAA7B,CAAA;EACA,IAAA,IAAMR,KAAK,GAAI,IAAO,GAAA,IAAR,GAAgBpB,IAAI,CAAC0C,GAAL,CAAS,CAAI5C,GAAAA,gBAAgB,CAACyB,EAAD,CAA7B,CAA9B,CAAA;EACA,IAAA,IAAMF,KAAK,GAAI,GAAM,GAAA,IAAP,GAAerB,IAAI,CAAC0C,GAAL,CAAS,CAAI5C,GAAAA,gBAAgB,CAAC2B,EAAD,CAA7B,CAA7B,CAAA;EACA,IAAA,IAAME,KAAK,GAAI,IAAO,GAAA,IAAR,GAAgB3B,IAAI,CAAC0C,GAAL,CAAS,CAAI5C,GAAAA,gBAAgB,CAAC8B,KAAD,CAA7B,CAA9B,CAAA;EACA,IAAA,OAAOT,KAAK,GAAGC,KAAR,GAAgBC,KAAhB,GAAwBM,KAA/B,CAAA;EACD,GAjJkB;EAmJnBwB,EAAAA,uBAnJmB,EAoJjBC,SAAAA,uBAAAA,CAAAA,gBApJiB,EAqJjBC,WArJiB,EAsJjBC,cAtJiB,EAuJjB;EACA,IAAMC,IAAAA,GAAG,GAAGH,gBAAZ,CAAA;EACA,IAAMI,IAAAA,KAAK,GAAGH,WAAd,CAAA;EACA,IAAMI,IAAAA,CAAC,GAAGH,cAAV,CAAA;EACA;;EACA,IAAA,IAAMnC,KAAK,GACTnB,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAACyD,GAAD,CAAzB,CAAkCvD,GAAAA,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAAC0D,KAAD,CAAzB,CADpC,CAAA;EAEA,IAAA,IAAMpC,KAAK,GACTpB,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAACyD,GAAD,CAAzB,CACAvD,GAAAA,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAAC0D,KAAD,CAAzB,CADA,GAEAxD,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAAC2D,CAAD,CAAzB,CAHF,CAAA;EAIA,IAAOvD,OAAAA,gBAAgB,CAACF,IAAI,CAAC0D,IAAL,CAAUvC,KAAK,GAAGC,KAAlB,CAAD,CAAvB,CAAA;EACD,GAnKkB;EAqKnBuC,EAAAA,kBArKmB,EAsKjBnG,SAAAA,kBAAAA,CAAAA,SAtKiB,EAuKjBoG,YAvKiB,EAwKjBC,cAxKiB,EAyKjB;EACA,IAAMC,IAAAA,CAAC,GAAGtG,SAAV,CAAA;EACA,IAAMuG,IAAAA,MAAM,GAAGH,YAAf,CAAA;EACA,IAAMI,IAAAA,EAAE,GAAGH,cAAX,CAAA;EACA;;EACA,IAAA,IAAMI,EAAE,GAAGH,CAAC,GAAG,CAAC,CAAhB,CAAA;EACA,IAAA,OAAO1D,gBAAgB,CAAC,CAAC4D,EAAE,GAAGC,EAAL,GAAUF,MAAX,IAAqB,GAAtB,EAA2B,CAA3B,CAAvB,CAAA;EACD,GAhLkB;;EAkLnB;EACAG,EAAAA,gBAnLmB,EAAA,SAAA,gBAAA,CAoLjBP,kBApLiB,EAqLjBnG,SArLiB,EAsLjBoG,YAtLiB,EAuLjBC,cAvLiB,EAwLjBM,sBAxLiB,EAyLjBC,kBAzLiB,EA0LjB;EACA,IAAMC,IAAAA,EAAE,GAAGV,kBAAX,CAAA;EACA,IAAMG,IAAAA,CAAC,GAAGtG,SAAV,CAAA;EACA,IAAMuG,IAAAA,MAAM,GAAGH,YAAf,CAAA;EACA,IAAMI,IAAAA,EAAE,GAAGH,cAAX,CAAA;EACA,IAAMS,IAAAA,EAAE,GAAGH,sBAAX,CAAA;EACA,IAAMI,IAAAA,EAAE,GAAGH,kBAAX,CAAA;EACA;;EACA,IAAA,IAAMH,EAAE,GAAGH,CAAC,GAAG,CAAC,CAAhB,CAAA;EACA,IAAMjB,IAAAA,KAAK,GAAGrC,WAAW,CAACuD,MAAM,GAAG,UAAA,GAAaM,EAAvB,CAAzB,CAAA;EACA,IAAA,IAAMG,CAAC,GAAGhE,WAAW,CAACjB,YAAY,CAACkF,iBAAb,CAA+BT,EAA/B,EAAmCM,EAAnC,EAAuCC,EAAvC,EAA2CF,EAA3C,CAAD,CAArB,CAAA;EACA,IAAMZ,IAAAA,CAAC,GAAG/C,kBAAkB,CAACmC,KAAK,GAAGoB,EAAR,GAAaO,CAAd,CAA5B,CAAA;EACA,IAAA,IAAME,EAAE,GAAGjB,CAAC,GAAG,CAAC,GAAhB,CAAA;EACA,IAAA,OAAO,CAACY,EAAE,GAAGK,EAAN,IAAY,EAAnB,CAAA;EACD,GAxMkB;EA0MnBC,EAAAA,kBA1MmB,8BA2MjBhB,kBA3MiB,EA4MjBlD,KA5MiB,EA6MjBpD,WA7MiB,EA8MjBuH,YA9MiB,EA+MjBhB,YA/MiB,EAgNjBC,cAhNiB,EAiNjBM,sBAjNiB,EAkNjBC,kBAlNiB,EAmNjBf,WAnNiB,EAoNjBwB,mBApNiB,EAqNjBC,eArNiB,EAsNjB;EACA,IAAMT,IAAAA,EAAE,GAAGV,kBAAX,CAAA;EACA,IAAMoB,IAAAA,EAAE,GAAGtE,KAAX,CAAA;EACA,IAAMsD,IAAAA,MAAM,GAAGH,YAAf,CAAA;EACA,IAAMI,IAAAA,EAAE,GAAGH,cAAX,CAAA;EACA,IAAMS,IAAAA,EAAE,GAAGH,sBAAX,CAAA;EACA,IAAMI,IAAAA,EAAE,GAAGH,kBAAX,CAAA;EACA,IAAMY,IAAAA,EAAE,GAAG3B,WAAX,CAAA;EACA,IAAM4B,IAAAA,EAAE,GAAGJ,mBAAX,CAAA;EACA,IAAMK,IAAAA,EAAE,GAAGJ,eAAX,CAAA;EAEA;;EACA,IAAA,IAAMb,EAAE,GAAG5G,WAAW,CAACG,SAAZ,GAAwB,CAAC,CAApC,CAAA;EACA,IAAA,IAAM2D,KAAK,GACTnB,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAACiF,EAAD,CAAzB,CACA/E,GAAAA,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAACzC,WAAW,CAACC,QAAb,CAAzB,CACE0C,GAAAA,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAACkF,EAAD,CAAzB,CAHJ,CAAA;EAIA,IAAM5D,IAAAA,KAAK,GACTpB,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAACzC,WAAW,CAACC,QAAb,CAAzB,CAAA,GACA0C,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAACkF,EAAD,CAAzB,CAFF,CAAA;EAGA,IAAA,IAAMG,EAAE,GAAGjF,gBAAgB,CAACF,IAAI,CAACoF,IAAL,CAAUjE,KAAK,GAAGC,KAAlB,CAAD,CAA3B,CAAA;EACA,IAAA,IAAMiE,CAAC,GAAGT,YAAY,GAAGP,EAAE,GAAGc,EAAE,GAAG,GAAb,GAAmBd,EAAE,GAAGc,EAAE,GAAG,GAAnD,CAAA;EACA,IAAMtC,IAAAA,KAAK,GAAGrC,WAAW,CAACuD,MAAM,GAAG,UAAA,GAAasB,CAAvB,CAAzB,CAAA;EACA,IAAA,IAAMb,CAAC,GAAGhE,WAAW,CAACjB,YAAY,CAACkF,iBAAb,CAA+BT,EAA/B,EAAmCM,EAAnC,EAAuCC,EAAvC,EAA2Cc,CAA3C,CAAD,CAArB,CAAA;EACA,IAAA,IAAM7B,KAAK,GAAGjE,YAAY,CAAC+F,WAAb,CAAyBN,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCG,CAArC,CAAd,CAAA;EACA,IAAA,IAAM5B,CAAC,GAAGZ,KAAK,GAAGoB,EAAR,GAAaO,CAAvB,CAAA;EACA,IAAA,IAAMe,CAAC,GAAGhG,YAAY,CAAC4D,uBAAb,CACR9F,WAAW,CAACC,QADJ,EAERkG,KAFQ,EAGRC,CAHQ,CAAV,CAAA;EAKA,IAAA,IAAMpC,KAAK,GAAGkE,CAAC,GAAGR,EAAlB,CAAA;EACA,IAAA,IAAMpD,KAAK,GACT,GACA3B,GAAAA,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAAC0D,KAAD,CAAzB,CADA,GAEAxD,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAACzC,WAAW,CAACC,QAAb,CAAzB,CAFA,GAGA0C,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAAC2D,CAAD,CAAzB,CAJF,CAAA;EAKA,IAAA,IAAMiB,EAAE,GAAGrD,KAAK,GAAGM,KAAnB,CAAA;EACA,IAAA,OAAO,CAAC0D,CAAC,GAAGX,EAAL,IAAW,EAAlB,CAAA;EACD,GA7PkB;;EA+PnB;EACF;EACA;EACA;EACEY,EAAAA,WAnQmB,uBAmQPE,EAnQO,EAmQKC,EAnQL,EAmQiBC,EAnQjB,EAmQ6BC,CAnQ7B,EAmQwC;EACzD;EACA,IAAA,IAAMnB,CAAC,GAAGgB,EAAE,GAAGC,EAAf,CAAA;EACA,IAAA,IAAMG,CAAC,GAAGF,EAAE,GAAGF,EAAf,CAAA;EACA,IAAA,IAAMK,CAAC,GAAGD,CAAC,GAAGpB,CAAd,CAAA;EACA,IAAA,OAAOgB,EAAE,GAAIG,CAAC,GAAG,CAAL,IAAWnB,CAAC,GAAGoB,CAAJ,GAAQD,CAAC,GAAGE,CAAvB,CAAZ,CAAA;EACD,GAzQkB;;EA2QnB;EACF;EACEpB,EAAAA,iBA7QmB,6BA6QDe,EA7QC,EA6QWC,EA7QX,EA6QuBC,EA7QvB,EA6QmCC,CA7QnC,EA6Q8C;EAC/D;EACA,IAAA,IAAMnB,CAAC,GAAGhE,WAAW,CAACgF,EAAE,GAAGC,EAAN,CAArB,CAAA;EACA,IAAA,IAAMG,CAAC,GAAGpF,WAAW,CAACkF,EAAE,GAAGF,EAAN,CAArB,CAAA;EACA,IAAA,IAAMK,CAAC,GAAGD,CAAC,GAAGpB,CAAd,CAAA;EACA,IAAA,OAAOgB,EAAE,GAAIG,CAAC,GAAG,CAAL,IAAWnB,CAAC,GAAGoB,CAAJ,GAAQD,CAAC,GAAGE,CAAvB,CAAZ,CAAA;EACD,GAnRkB;;EAqRnB;EACAC,EAAAA,SAtRmB,EAsRT9H,SAAAA,SAAAA,CAAAA,IAtRS,EAsRKE,KAtRL,EAsRoBE,GAtRpB,EAsR4C;EAAA,IAAXE,IAAAA,KAAW,uEAAH,CAAG,CAAA;;EAC7D;EAEA,IAAA,IAAMyH,KAAK,GAAG/F,IAAI,CAAC+F,KAAnB,CAAA;EAEA,IAAA,IAAMC,CAAC,GAAGD,KAAK,CAAC7H,KAAK,GAAG,CAAR,GAAYF,IAAZ,GAAmBA,IAAI,GAAG,CAA3B,CAAf,CAAA;EACA,IAAA,IAAM8D,CAAC,GAAGiE,KAAK,CAAC7H,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoBA,KAAK,GAAG,EAA7B,CAAf,CAAA;EACA,IAAA,IAAM+H,CAAC,GAAG7H,GAAG,GAAGE,KAAK,GAAG,EAAxB,CAAA;EAEA,IAAA,IAAM4H,CAAC,GAAGH,KAAK,CAACC,CAAC,GAAG,GAAL,CAAf,CAAA;EACA,IAAA,IAAMG,CAAC,GAAGJ,KAAK,CAAC,CAAIG,GAAAA,CAAJ,GAAQH,KAAK,CAACG,CAAC,GAAG,CAAL,CAAd,CAAf,CAAA;EAEA,IAAME,IAAAA,EAAE,GAAGL,KAAK,CAAC,UAAUC,CAAC,GAAG,IAAd,CAAD,CAAhB,CAAA;EACA,IAAMK,IAAAA,EAAE,GAAGN,KAAK,CAAC,WAAWjE,CAAC,GAAG,CAAf,CAAD,CAAhB,CAAA;EAEA,IAAOsE,OAAAA,EAAE,GAAGC,EAAL,GAAUJ,CAAV,GAAcE,CAAd,GAAkB,MAAzB,CAAA;EACD,GAtSkB;;EAwSnB;EACAlF,EAAAA,aAzSmB,EAySL6E,SAAAA,aAAAA,CAAAA,SAzSK,EAySc;EAC/B;EACA,IAAA,OAAO,CAACA,SAAS,GAAG,SAAb,IAA0B,KAAjC,CAAA;EACD,GA5SkB;;EA8SnB;EACAtG,EAAAA,UA/SmB,EA+SRxB,SAAAA,UAAAA,CAAAA,IA/SQ,EA+SM;EACvB,IAAA,IAAIA,IAAI,GAAG,CAAP,KAAa,CAAjB,EAAoB;EAClB,MAAA,OAAO,KAAP,CAAA;EACD,KAAA;;EAED,IAAIA,IAAAA,IAAI,GAAG,GAAP,KAAe,CAAf,IAAoBA,IAAI,GAAG,GAAP,KAAe,CAAvC,EAA0C;EACxC,MAAA,OAAO,KAAP,CAAA;EACD,KAAA;;EAED,IAAA,OAAO,IAAP,CAAA;EACD,GAzTkB;EA2TnBsI,EAAAA,6BA3TmB,yCA4TjBhJ,QA5TiB,EA6TjB8B,SA7TiB,EA8TjBpB,IA9TiB,EA+TjBuI,OA/TiB,EAgUjB;EACA,IAAM/B,IAAAA,CAAC,GAAG,EAAA,GAAM,KAAQ,GAAA,IAAT,GAAiBxE,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAhC,CAAA;EACA,IAAMsI,IAAAA,CAAC,GAAG,EAAA,GAAM,KAAQ,GAAA,IAAT,GAAiB5F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAhC,CAAA;EACA,IAAMuI,IAAAA,CAAC,GAAG,EAAA,GAAM,KAAQ,GAAA,IAAT,GAAiB7F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAhC,CAAA;EACA,IAAMmJ,IAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgBzG,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAA/B,CAAA;;EAEA,IAAMoJ,IAAAA,UAAU,GAAI,YAAY;EAC9B,MAAMC,IAAAA,GAAG,GAAGpH,YAAY,CAACqH,iBAAb,CAA+BxH,SAA/B,EAA0CpB,IAA1C,EAAgDV,QAAhD,CAAZ,CAAA;;EACA,MAAIqJ,IAAAA,GAAG,GAAG,EAAV,EAAc;EACZ,QAAOnC,OAAAA,CAAC,GAAI,CAACoB,CAAC,GAAGpB,CAAL,IAAU,IAAX,GAAmBmC,GAA9B,CAAA;EACD,OAFD,MAEO,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOf,CAAC,GAAI,CAACC,CAAC,GAAGD,CAAL,IAAU,IAAX,IAAoBe,GAAG,GAAG,EAA1B,CAAX,CAAA;EACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOd,CAAC,GAAI,CAACY,CAAC,GAAGZ,CAAL,IAAU,IAAX,IAAoBc,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOF,CAAC,GAAI,CAACZ,CAAC,GAAGY,CAAL,IAAU,IAAX,IAAoBE,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOd,CAAC,GAAI,CAACD,CAAC,GAAGC,CAAL,IAAU,IAAX,IAAoBc,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAFM,MAEA;EACL,QAAA,OAAOf,CAAC,GAAI,CAACpB,CAAC,GAAGoB,CAAL,IAAU,IAAX,IAAoBe,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAAA;EACF,KAfkB,EAAnB,CAAA;;EAiBA,IAAA,OAAO7H,mBAAmB,CAACyH,OAAD,EAAUvG,IAAI,CAACW,KAAL,CAAW+F,UAAU,GAAG,CAAC,IAAzB,CAAV,CAA1B,CAAA;EACD,GAxVkB;EA0VnBG,EAAAA,6BA1VmB,EA2VjBvJ,SAAAA,6BAAAA,CAAAA,QA3ViB,EA4VjB8B,SA5ViB,EA6VjBpB,IA7ViB,EA8VjB8I,MA9ViB,EA+VjBC,MA/ViB,EAgWjB;EACA,IAAA,IAAIvC,CAAJ,EAAOoB,CAAP,EAAUC,CAAV,EAAaY,CAAb,CAAA;;EACA,IAAA,IAAIM,MAAM,KAAKnG,MAAM,CAACE,KAAtB,EAA6B;EAC3B0D,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgBxE,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAsI,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgB5F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAuI,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgB7F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAmJ,MAAAA,CAAC,GAAG,EAAA,GAAM,KAAQ,GAAA,IAAT,GAAiBzG,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAA1B,CAAA;EACD,KALD,MAKO,IAAIyJ,MAAM,KAAKnG,MAAM,CAACG,KAAtB,EAA6B;EAClCyD,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgBxE,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAsI,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgB5F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAuI,MAAAA,CAAC,GAAG,EAAA,GAAM,KAAQ,GAAA,IAAT,GAAiB7F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAA1B,CAAA;EACAmJ,MAAAA,CAAC,GAAG,EAAA,GAAM,KAAQ,GAAA,IAAT,GAAiBzG,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAA1B,CAAA;EACD,KALM,MAKA;EACLkH,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgBxE,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAsI,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgB5F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAuI,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgB7F,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACAmJ,MAAAA,CAAC,GAAG,EAAA,GAAM,IAAO,GAAA,IAAR,GAAgBzG,IAAI,CAACwG,GAAL,CAASlJ,QAAT,CAAzB,CAAA;EACD,KAAA;;EAED,IAAMoJ,IAAAA,UAAU,GAAI,YAAY;EAC9B,MAAMC,IAAAA,GAAG,GAAGpH,YAAY,CAACqH,iBAAb,CAA+BxH,SAA/B,EAA0CpB,IAA1C,EAAgDV,QAAhD,CAAZ,CAAA;;EACA,MAAIqJ,IAAAA,GAAG,GAAG,EAAV,EAAc;EACZ,QAAOnC,OAAAA,CAAC,GAAI,CAACoB,CAAC,GAAGpB,CAAL,IAAU,IAAX,GAAmBmC,GAA9B,CAAA;EACD,OAFD,MAEO,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOf,CAAC,GAAI,CAACC,CAAC,GAAGD,CAAL,IAAU,IAAX,IAAoBe,GAAG,GAAG,EAA1B,CAAX,CAAA;EACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOd,CAAC,GAAI,CAACY,CAAC,GAAGZ,CAAL,IAAU,IAAX,IAAoBc,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOF,CAAC,GAAI,CAACZ,CAAC,GAAGY,CAAL,IAAU,IAAX,IAAoBE,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAFM,MAEA,IAAIA,GAAG,GAAG,GAAV,EAAe;EACpB,QAAA,OAAOd,CAAC,GAAI,CAACD,CAAC,GAAGC,CAAL,IAAU,IAAX,IAAoBc,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAFM,MAEA;EACL,QAAA,OAAOf,CAAC,GAAI,CAACpB,CAAC,GAAGoB,CAAL,IAAU,IAAX,IAAoBe,GAAG,GAAG,GAA1B,CAAX,CAAA;EACD,OAAA;EACF,KAfkB,EAAnB,CAAA;;EAiBA,IAAA,OAAO7H,mBAAmB,CAACgI,MAAD,EAAS9G,IAAI,CAACW,KAAL,CAAW+F,UAAU,GAAG,IAAxB,CAAT,CAA1B,CAAA;EACD,GArYkB;EAuYnBE,EAAAA,iBAvYmB,EAuYDxH,SAAAA,iBAAAA,CAAAA,SAvYC,EAuYkBpB,IAvYlB,EAuYgCV,QAvYhC,EAuYkD;EACnE,IAAIsJ,IAAAA,iBAAiB,GAAG,CAAxB,CAAA;EACA,IAAMI,IAAAA,cAAc,GAAG,EAAvB,CAAA;EACA,IAAMC,IAAAA,cAAc,GAAG1H,YAAY,CAACC,UAAb,CAAwBxB,IAAxB,CAAA,GAAgC,GAAhC,GAAsC,GAA7D,CAAA;EACA,IAAMkJ,IAAAA,UAAU,GAAG3H,YAAY,CAACC,UAAb,CAAwBxB,IAAxB,CAAA,GAAgC,GAAhC,GAAsC,GAAzD,CAAA;;EAEA,IAAIV,IAAAA,QAAQ,IAAI,CAAhB,EAAmB;EACjBsJ,MAAAA,iBAAiB,GAAGxH,SAAS,GAAG4H,cAAhC,CAAA;;EACA,MAAIJ,IAAAA,iBAAiB,IAAIM,UAAzB,EAAqC;EACnCN,QAAAA,iBAAiB,GAAGA,iBAAiB,GAAGM,UAAxC,CAAA;EACD,OAAA;EACF,KALD,MAKO;EACLN,MAAAA,iBAAiB,GAAGxH,SAAS,GAAG6H,cAAhC,CAAA;;EACA,MAAIL,IAAAA,iBAAiB,GAAG,CAAxB,EAA2B;EACzBA,QAAAA,iBAAiB,GAAGA,iBAAiB,GAAGM,UAAxC,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,OAAON,iBAAP,CAAA;EACD,GAAA;EA1ZkB,CAArB;;MCVqBO,6CAKnB,SAAYrB,gBAAAA,CAAAA,SAAZ,EAA+B;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,CAAA,CAAA;;EAC7B,EAAA,IAAM5E,CAAC,GAAG3B,YAAY,CAAC0B,aAAb,CAA2B6E,SAA3B,CAAV,CAAA;EACA,EAAA,IAAMvE,EAAE,GAAGhC,YAAY,CAACyB,kBAAb,CAAgCE,CAAhC,CAAX,CAAA;EACA,EAAA,IAAMO,EAAE,GAAGlC,YAAY,CAACiC,kBAAb,CAAgCN,CAAhC,CAAX,CAAA;EACA,EAAA,IAAMU,KAAK,GAAGrC,YAAY,CAACmC,2BAAb,CAAyCR,CAAzC,CAAd,CAAA;EACA,EAAA,IAAMmB,MAAM,GAAGvC,gBAAgB,CAACP,YAAY,CAAC4C,sBAAb,CAAoCjB,CAApC,EAAuCK,EAAvC,CAAD,CAA/B,CAAA;EACA,EAAA,IAAMwC,MAAM,GAAGxE,YAAY,CAACoD,gBAAb,CAA8BzB,CAA9B,CAAf,CAAA;EACA,EAAA,IAAMkG,IAAI,GAAG7H,YAAY,CAACuD,mBAAb,CAAiC5B,CAAjC,EAAoCK,EAApC,EAAwCE,EAAxC,EAA4CG,KAA5C,CAAb,CAAA;EACA,EAAA,IAAMyF,QAAQ,GAAG9H,YAAY,CAAC2D,mBAAb,CAAiChC,CAAjC,EAAoCK,EAApC,EAAwCE,EAAxC,EAA4CG,KAA5C,CAAjB,CAAA;EACA,EAAA,IAAMY,QAAQ,GAAGjD,YAAY,CAAC+C,0BAAb,CAAwCpB,CAAxC,CAAjB,CAAA;EACA,EAAA,IAAMoG,eAAe,GAAGxH,gBAAgB,CACtCP,YAAY,CAACgD,8BAAb,CAA4CrB,CAA5C,EAA+CsB,QAA/C,CADsC,CAAxC,CAAA;EAIA;EACJ;EACA;EACA;;EACI,EAAKa,IAAAA,CAAAA,WAAL,GAAmBnD,gBAAgB,CACjCF,IAAI,CAAC0D,IAAL,CAAU1D,IAAI,CAACkC,GAAL,CAASoF,eAAT,IAA4BtH,IAAI,CAACkC,GAAL,CAASG,MAAT,CAAtC,CADiC,CAAnC,CAAA;EAIA;EACJ;EACA;EACA;;EACI,EAAA,IAAA,CAAKwB,cAAL,GAAsBrD,WAAW,CAC/BN,gBAAgB,CACdF,IAAI,CAACuH,KAAL,CACEvH,IAAI,CAAC0C,GAAL,CAAS4E,eAAT,CAA4BtH,GAAAA,IAAI,CAACkC,GAAL,CAASG,MAAT,CAD9B,EAEErC,IAAI,CAAC0C,GAAL,CAASL,MAAT,CAFF,CADc,CADe,CAAjC,CAAA;EASA;EACJ;EACA;;EACI,EAAKmF,IAAAA,CAAAA,oBAAL,GACEzD,MAAM,GACLqD,IAAI,GAAG,IAAP,GAAcpH,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAAC0C,QAAQ,GAAG6E,QAAZ,CAAzB,CAAf,GAAkE,IAFpE,CAAA;EAGD;;MC5CkBI;EAUnB,EAAY3J,SAAAA,SAAAA,CAAAA,IAAZ,EAAwBT,WAAxB,EAAkD;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;EAChD,IAAMyI,IAAAA,SAAS,GAAGvG,YAAY,CAACuG,SAAb,CAChBhI,IAAI,CAACG,WAAL,EADgB,EAEhBH,IAAI,CAACK,QAAL,EAAkB,GAAA,CAFF,EAGhBL,IAAI,CAACO,OAAL,EAHgB,EAIhB,CAJgB,CAAlB,CAAA;EAOA,IAAKqJ,IAAAA,CAAAA,QAAL,GAAgBrK,WAAhB,CAAA;EACA,IAAA,IAAA,CAAKsK,KAAL,GAAa,IAAIR,gBAAJ,CAAqBrB,SAArB,CAAb,CAAA;EAEA,IAAK8B,IAAAA,CAAAA,SAAL,GAAiB,IAAIT,gBAAJ,CAAqBrB,SAAS,GAAG,CAAjC,CAAjB,CAAA;EACA,IAAK+B,IAAAA,CAAAA,SAAL,GAAiB,IAAIV,gBAAJ,CAAqBrB,SAAS,GAAG,CAAjC,CAAjB,CAAA;EAEA,IAAA,IAAMzB,EAAE,GAAG9E,YAAY,CAACoE,kBAAb,CACTtG,WAAW,CAACG,SADH,EAET,IAAKmK,CAAAA,KAAL,CAAWH,oBAFF,EAGT,KAAKG,KAAL,CAAW9D,cAHF,CAAX,CAAA;EAKA,IAAA,IAAMiE,aAAa,GAAG,CAAC,IAAD,GAAQ,IAA9B,CAAA;EAEA,IAAKC,IAAAA,CAAAA,aAAL,GAAqB1D,EAArB,CAAA;EAEA,IAAA,IAAA,CAAK2D,OAAL,GAAezI,YAAY,CAAC2E,gBAAb,CACbG,EADa,EAEbhH,WAAW,CAACG,SAFC,EAGb,KAAKmK,KAAL,CAAWH,oBAHE,EAIb,IAAKG,CAAAA,KAAL,CAAW9D,cAJE,EAKb,IAAK+D,CAAAA,SAAL,CAAe/D,cALF,EAMb,IAAA,CAAKgE,SAAL,CAAehE,cANF,CAAf,CAAA;EASA,IAAK0C,IAAAA,CAAAA,OAAL,GAAehH,YAAY,CAACoF,kBAAb,CACbN,EADa,EAEbyD,aAFa,EAGbzK,WAHa,EAIb,KAJa,EAKb,KAAKsK,KAAL,CAAWH,oBALE,EAMb,IAAA,CAAKG,KAAL,CAAW9D,cANE,EAOb,KAAK+D,SAAL,CAAe/D,cAPF,EAQb,IAAA,CAAKgE,SAAL,CAAehE,cARF,EASb,IAAA,CAAK8D,KAAL,CAAWtE,WATE,EAUb,IAAA,CAAKuE,SAAL,CAAevE,WAVF,EAWb,IAAKwE,CAAAA,SAAL,CAAexE,WAXF,CAAf,CAAA;EAcA,IAAKyD,IAAAA,CAAAA,MAAL,GAAcvH,YAAY,CAACoF,kBAAb,CACZN,EADY,EAEZyD,aAFY,EAGZzK,WAHY,EAIZ,IAJY,EAKZ,KAAKsK,KAAL,CAAWH,oBALC,EAMZ,IAAA,CAAKG,KAAL,CAAW9D,cANC,EAOZ,KAAK+D,SAAL,CAAe/D,cAPH,EAQZ,IAAA,CAAKgE,SAAL,CAAehE,cARH,EASZ,IAAA,CAAK8D,KAAL,CAAWtE,WATC,EAUZ,IAAA,CAAKuE,SAAL,CAAevE,WAVH,EAWZ,IAAKwE,CAAAA,SAAL,CAAexE,WAXH,CAAd,CAAA;EAaD,GAAA;;;;aAED,SAAU5C,SAAAA,CAAAA,KAAV,EAAyBmE,YAAzB,EAAgD;EAC9C,MAAOrF,OAAAA,YAAY,CAACoF,kBAAb,CACL,KAAKoD,aADA,EAELtH,KAFK,EAGL,IAAKiH,CAAAA,QAHA,EAIL9C,YAJK,EAKL,KAAK+C,KAAL,CAAWH,oBALN,EAML,IAAA,CAAKG,KAAL,CAAW9D,cANN,EAOL,KAAK+D,SAAL,CAAe/D,cAPV,EAQL,IAAA,CAAKgE,SAAL,CAAehE,cARV,EASL,IAAA,CAAK8D,KAAL,CAAWtE,WATN,EAUL,IAAA,CAAKuE,SAAL,CAAevE,WAVV,EAWL,IAAKwE,CAAAA,SAAL,CAAexE,WAXV,CAAP,CAAA;EAaD,KAAA;;;EAED,IAAA,KAAA,EAAA,SAAA,SAAA,CAAUvG,YAAV,EAAgC;EAC9B;EACA,MAAA,IAAMmL,OAAO,GAAGjI,IAAI,CAACwG,GAAL,CAAS,IAAA,CAAKkB,QAAL,CAAcpK,QAAd,GAAyB,IAAA,CAAKqK,KAAL,CAAWtE,WAA7C,CAAhB,CAAA;EACA,MAAA,IAAM6E,OAAO,GAAGpL,YAAY,GAAGkD,IAAI,CAACmI,GAAL,CAASrI,gBAAgB,CAACmI,OAAD,CAAzB,CAA/B,CAAA;EACA,MAAMxH,IAAAA,KAAK,GAAGP,gBAAgB,CAACF,IAAI,CAACoI,IAAL,CAAU,GAAA,GAAMF,OAAhB,CAAD,CAA9B,CAAA;EACA,MAAA,OAAO,KAAKG,SAAL,CAAe5H,KAAf,EAAsB,IAAtB,CAAP,CAAA;EACD,KAAA;;;;;;AC7FI,MAAM6H,qBAAqB,GAAG;EACnCC,EAAAA,UAAU,EAAE,YADuB;EAEnCC,EAAAA,SAAS,EAAE,WAFwB;EAGnCC,EAAAA,UAAU,EAAE,YAAA;EAHuB,EAA9B;EAMP,IAAMC,uBAAuB,GAAG,GAAhC;;EACA,IAAMC,eAAe,GAAG,EAAxB;;EAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAA;EAAA,EAAA,OACvB,CAACjJ,KAAK,CAACiJ,SAAS,CAACtC,OAAX,CAAN,IAA6B,CAAC3G,KAAK,CAACiJ,SAAS,CAAC/B,MAAX,CADZ,CAAA;EAAA,CAAzB,CAAA;;EAGA,IAAMgC,iBAAiB,GAAG,SAApBA,iBAAoB,CACxBzL,WADwB,EAExBS,IAFwB,EAWd;EAAA,EARViL,IAAAA,SAQU,uEARE,CAQF,CAAA;EAAA,EAPVC,IAAAA,SAOU,uEAPE,CAOF,CAAA;;EACV,EAAID,IAAAA,SAAS,GAAG/I,IAAI,CAACiJ,IAAL,CAAU,GAAA,GAAM,CAAhB,CAAhB,EAAoC;EAClC,IAAA,OAAO,IAAP,CAAA;EACD,GAAA;;EACD,EAAMC,IAAAA,QAAQ,GAAG,IAAItK,IAAJ,CAASd,IAAI,CAACiB,OAAL,EAAT,CAAjB,CAAA;EACAmK,EAAAA,QAAQ,CAACC,OAAT,CAAiBD,QAAQ,CAAC7K,OAAT,EAAA,GAAqB2K,SAAS,GAAGD,SAAlD,CAAA,CAAA;EACA,EAAA,IAAMK,QAAQ,GAAGvL,gBAAgB,CAACqL,QAAD,EAAW,CAAX,CAAjC,CAAA;EACA,EAAML,IAAAA,SAAS,GAAG,IAAIpB,SAAJ,CAAcyB,QAAd,EAAwB7L,WAAxB,CAAlB,CAAA;EACA,EAAMgM,IAAAA,iBAAiB,GAAG,IAAI5B,SAAJ,CAAc2B,QAAd,EAAwB/L,WAAxB,CAA1B,CAAA;;EAEA,EAAI,IAAA,CAACuL,gBAAgB,CAACC,SAAD,CAAjB,IAAgC,CAACD,gBAAgB,CAACS,iBAAD,CAArD,EAA0E;EACxE,IAAA,OAAOP,iBAAiB,CACtBzL,WADsB,EAEtBS,IAFsB,EAGtBiL,SAAS,IAAIC,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoB,CAAxB,CAHa,EAItB,CAACA,SAJqB,CAAxB,CAAA;EAMD,GAAA;;EAED,EAAO,OAAA;EACLlL,IAAAA,IAAI,EAAJA,IADK;EAELsL,IAAAA,QAAQ,EAARA,QAFK;EAGL/L,IAAAA,WAAW,EAAXA,WAHK;EAILwL,IAAAA,SAAS,EAATA,SAJK;EAKLQ,IAAAA,iBAAiB,EAAjBA,iBAAAA;EALK,GAAP,CAAA;EAOD,CArCD,CAAA;;EAuCA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBjM,WADyB,EAEzBS,IAFyB,EAGzBR,QAHyB,EAUf;EACV,EAAA,IAAMuL,SAAS,GAAG,IAAIpB,SAAJ,CAAc3J,IAAd,oCAAyBT,WAAzB,CAAA,EAAA,EAAA,EAAA;EAAsCC,IAAAA,QAAQ,EAARA,QAAAA;EAAtC,GAAlB,CAAA,CAAA,CAAA;EACA,EAAA,IAAM8L,QAAQ,GAAGvL,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAAjC,CAAA;EACA,EAAA,IAAMuL,iBAAiB,GAAG,IAAI5B,SAAJ,CAAc2B,QAAd,oCACrB/L,WADqB,CAAA,EAAA,EAAA,EAAA;EAExBC,IAAAA,QAAQ,EAARA,QAAAA;EAFwB,GAA1B,CAAA,CAAA,CAAA;;EAIA,EAAI,IAAA,CAACsL,gBAAgB,CAACC,SAAD,CAAjB,IAAgC,CAACD,gBAAgB,CAACS,iBAAD,CAArD,EAA0E;EACxE,IAAOrJ,OAAAA,IAAI,CAACwG,GAAL,CAASlJ,QAAT,KAAsBqL,eAAtB,GACHW,kBAAkB,CAChBjM,WADgB,EAEhBS,IAFgB,EAGhBR,QAAQ,GAAG0C,IAAI,CAACuJ,IAAL,CAAUjM,QAAV,CAAsBoL,GAAAA,uBAHjB,CADf,GAMH,IANJ,CAAA;EAOD,GAAA;;EAED,EAAO,OAAA;EACL5K,IAAAA,IAAI,EAAJA,IADK;EAELsL,IAAAA,QAAQ,EAARA,QAFK;EAGL/L,IAAAA,WAAW,EAAE,IAAIE,WAAJ,CAAgBD,QAAhB,EAA0BD,WAAW,CAACG,SAAtC,CAHR;EAILqL,IAAAA,SAAS,EAATA,SAJK;EAKLQ,IAAAA,iBAAiB,EAAjBA,iBAAAA;EALK,GAAP,CAAA;EAOD,CAlCD,CAAA;;EAoCO,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B,CACvCC,QADuC,EAEvC3L,IAFuC,EAGvCT,WAHuC,EAIpC;EACH,EAAA,IAAMqM,aAAa,GAAG;EACpB5L,IAAAA,IAAI,EAAJA,IADoB;EAEpBsL,IAAAA,QAAQ,EAAEvL,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAFN;EAGpBT,IAAAA,WAAW,EAAXA,WAHoB;EAIpBwL,IAAAA,SAAS,EAAE,IAAIpB,SAAJ,CAAc3J,IAAd,EAAoBT,WAApB,CAJS;EAKpBgM,IAAAA,iBAAiB,EAAE,IAAI5B,SAAJ,CAAc5J,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAA9B,EAAyCT,WAAzC,CAAA;EALC,GAAtB,CAAA;;EAQA,EAAA,QAAQoM,QAAR;EACE,IAAKnB,KAAAA,qBAAqB,CAACE,SAA3B;EAAsC,MAAA;EACpC,QAAA,OAAOM,iBAAiB,CAACzL,WAAD,EAAcS,IAAd,CAAjB,IAAwC4L,aAA/C,CAAA;EACD,OAAA;;EACD,IAAKpB,KAAAA,qBAAqB,CAACC,UAA3B;EAAuC,MAAA;EACrC,QAAA,IAAQjL,QAAR,GAAqBD,WAArB,CAAQC,QAAR,CAAA;EACA,QAAA,OACEgM,kBAAkB,CAChBjM,WADgB,EAEhBS,IAFgB,EAGhBR,QAAQ,GAAG0C,IAAI,CAACuJ,IAAL,CAAUjM,QAAV,IAAsBoL,uBAHjB,CAAlB,IAIKgB,aALP,CAAA;EAOD,OAAA;;EACD,IAAA;EAAS,MAAA;EACP,QAAA,OAAOA,aAAP,CAAA;EACD,OAAA;EAhBH,GAAA;EAkBD,CA/BM;;MCpFcC;EACnB;EAGA;EACA;EACA;EAIA;EAUA;EAUA;EACA;EACA;EAIA;EAGA;EAGA,EACE,SAAA,qBAAA;EACA;EACOC,EAAAA,MAHT,EAcE;EAAA,IATOC,IAAAA,SASP,uEATmB,CASnB,CAAA;EAAA,IAPOC,IAAAA,SAOP,uEAPmB,CAOnB,CAAA;EAAA,IAJOC,IAAAA,YAIP,uEAJsB,CAItB,CAAA;EAAA,IADOC,IAAAA,YACP,uEADsB,CACtB,CAAA;;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,qBAAA,CAAA,CAAA;;EAAA,IAtD+BrN,eAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAAA,MAAM,CAACC,KAsDtC,CAAA,CAAA;;EAAA,IAhDAI,eAAAA,CAAAA,IAAAA,EAAAA,kBAAAA,EAAAA,gBAAgB,CAACC,gBAgDjB,CAAA,CAAA;;EAAA,IA7CY,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA;EACZgN,MAAAA,IAAI,EAAE,CADM;EAEZ1D,MAAAA,OAAO,EAAE,CAFG;EAGZ2D,MAAAA,KAAK,EAAE,CAHK;EAIZC,MAAAA,GAAG,EAAE,CAJO;EAKZC,MAAAA,OAAO,EAAE,CALG;EAMZC,MAAAA,IAAI,EAAE,CAAA;EANM,KA6CZ,CAAA,CAAA;;EAAA,IAnCkB,eAAA,CAAA,IAAA,EAAA,mBAAA,EAAA;EAClBJ,MAAAA,IAAI,EAAE,CADY;EAElB1D,MAAAA,OAAO,EAAE,CAFS;EAGlB2D,MAAAA,KAAK,EAAE,CAHW;EAIlBC,MAAAA,GAAG,EAAE,CAJa;EAKlBC,MAAAA,OAAO,EAAE,CALS;EAMlBC,MAAAA,IAAI,EAAE,CAAA;EANY,KAmClB,CAAA,CAAA;;EAAA,IAtBA/B,eAAAA,CAAAA,IAAAA,EAAAA,uBAAAA,EAAAA,qBAAqB,CAACG,UAsBtB,CAAA,CAAA;;EAAA,IAnBmChL,eAAAA,CAAAA,IAAAA,EAAAA,UAAAA,EAAAA,QAAQ,CAACC,OAmB5C,CAAA,CAAA;;EAAA,IAhB+BkD,eAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAAA,MAAM,CAACC,OAgBtC,CAAA,CAAA;;EAAA,IAXO+I,IAAAA,CAAAA,MAWP,GAXOA,MAWP,CAAA;EAAA,IATOC,IAAAA,CAAAA,SASP,GATOA,SASP,CAAA;EAAA,IAPOC,IAAAA,CAAAA,SAOP,GAPOA,SAOP,CAAA;EAAA,IAJOC,IAAAA,CAAAA,YAIP,GAJOA,YAIP,CAAA;EAAA,IADOC,IAAAA,CAAAA,YACP,GADOA,YACP,CAAA;;EACA,IAAA,IAAI,IAAKJ,CAAAA,MAAL,KAAgB,IAApB,EAA0B;EACxB;EACA,MAAKA,IAAAA,CAAAA,MAAL,GAAc,OAAd,CAAA;EACD,KAAA;EACF,GAAA;;;;aAED,SAAgB,aAAA,GAAA;EACd,MAAA,QAAQ,KAAKU,gBAAb;EACE,QAAKtN,KAAAA,gBAAgB,CAACC,gBAAtB;EACE,UAAO,OAAA;EAAEgN,YAAAA,IAAI,EAAE,CAAA,GAAI,CAAZ;EAAeI,YAAAA,IAAI,EAAE,CAAI,GAAA,CAAA;EAAzB,WAAP,CAAA;;EACF,QAAKrN,KAAAA,gBAAgB,CAACE,iBAAtB;EACE,UAAO,OAAA;EAAE+M,YAAAA,IAAI,EAAE,CAAA,GAAI,CAAZ;EAAeI,YAAAA,IAAI,EAAE,CAAI,GAAA,CAAA;EAAzB,WAAP,CAAA;;EACF,QAAKrN,KAAAA,gBAAgB,CAACG,aAAtB;EACE,UAAO,OAAA;EAAE8M,YAAAA,IAAI,EAAE,IAAKJ,CAAAA,SAAL,GAAiB,EAAzB;EAA6BQ,YAAAA,IAAI,EAAE,IAAKP,CAAAA,SAAL,GAAiB,EAAA;EAApD,WAAP,CAAA;;EACF,QAAA;EACE,UAAA,MAAA,8EAAA,CAAA,MAAA,CAAqF,KAAKQ,gBAA1F,CAAA,CAAA;EARJ,OAAA;EAUD,KAAA;;;;;;AC/EH,MAAMC,iBAAiB,GAAG;EACxB;EACAC,EAAAA,iBAFwB,EAEJ,SAAA,iBAAA,GAAA;EAClB,IAAMC,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,mBAA1B,EAA+C,EAA/C,EAAmD,EAAnD,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,CAAyBR,KAAzB,GAAiC,CAAjC,CAAA;EACA,IAAA,OAAOO,MAAP,CAAA;EACD,GANuB;EAQxB;EACAE,EAAAA,QATwB,EASb,SAAA,QAAA,GAAA;EACT,IAAMF,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,UAA1B,EAAsC,IAAtC,EAA4C,IAA5C,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,CAAyBR,KAAzB,GAAiC,CAAjC,CAAA;EACA,IAAA,OAAOO,MAAP,CAAA;EACD,GAbuB;EAexB;EACAG,EAAAA,OAhBwB,EAgBd,SAAA,OAAA,GAAA;EACR,IAAMH,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,SAA1B,EAAqC,EAArC,EAAyC,EAAzC,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,CAAyBR,KAAzB,GAAiC,CAAjC,CAAA;EACA,IAAA,OAAOO,MAAP,CAAA;EACD,GApBuB;EAsBxB;EACAI,EAAAA,SAvBwB,EAuBZ,SAAA,SAAA,GAAA;EACV,IAAO,OAAA,IAAIlB,qBAAJ,CAA0B,WAA1B,EAAuC,IAAvC,EAA6C,CAA7C,EAAgD,EAAhD,CAAP,CAAA;EACD,GAzBuB;EA2BxB;EACAmB,EAAAA,KA5BwB,EA4BhB,SAAA,KAAA,GAAA;EACN,IAAML,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,OAA1B,EAAmC,IAAnC,EAAyC,IAAzC,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,GACKD,cAAAA,CAAAA,cAAAA,CAAAA,EAAAA,EAAAA,MAAM,CAACC,iBADZ,CAAA,EAAA,EAAA,EAAA;EAEEnE,MAAAA,OAAO,EAAE,CAAC,CAFZ;EAGE2D,MAAAA,KAAK,EAAE,CAHT;EAIEC,MAAAA,GAAG,EAAE,CAJP;EAKEC,MAAAA,OAAO,EAAE,CAAA;EALX,KAAA,CAAA,CAAA;EAOA,IAAA,OAAOK,MAAP,CAAA;EACD,GAtCuB;EAwCxB;EACAM,EAAAA,qBAzCwB,EAyCA,SAAA,qBAAA,GAAA;EACtB,IAAMN,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,uBAA1B,EAAmD,EAAnD,EAAuD,EAAvD,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,GACKD,cAAAA,CAAAA,cAAAA,CAAAA,EAAAA,EAAAA,MAAM,CAACC,iBADZ,CAAA,EAAA,EAAA,EAAA;EAEER,MAAAA,KAAK,EAAE,CAFT;EAGEE,MAAAA,OAAO,EAAE,CAAA;EAHX,KAAA,CAAA,CAAA;EAMA,IAAA,OAAOK,MAAP,CAAA;EACD,GAlDuB;EAoDxB;EACAO,EAAAA,YArDwB,EAqDT,SAAA,YAAA,GAAA;EACb,IAAMP,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,cAA1B,EAA0C,EAA1C,EAA8C,EAA9C,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,CAAyBR,KAAzB,GAAiC,CAAjC,CAAA;EACA,IAAA,OAAOO,MAAP,CAAA;EACD,GAzDuB;EA2DxB;EACAQ,EAAAA,MA5DwB,EA4Df,SAAA,MAAA,GAAA;EACP,IAAO,OAAA,IAAItB,qBAAJ,CAA0B,QAA1B,EAAoC,EAApC,EAAwC,IAAxC,CAAP,CAAA;EACD,GA9DuB;EAgExB;EACAuB,EAAAA,KAjEwB,EAiEhB,SAAA,KAAA,GAAA;EACN,IAAO,OAAA,IAAIvB,qBAAJ,CAA0B,OAA1B,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,EAA1C,CAAP,CAAA;EACD,GAnEuB;EAqExB;EACAwB,EAAAA,SAtEwB,EAsEZ,SAAA,SAAA,GAAA;EACV,IAAMV,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,WAA1B,EAAuC,EAAvC,EAA2C,EAA3C,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,CAAyBR,KAAzB,GAAiC,CAAjC,CAAA;EACAO,IAAAA,MAAM,CAACxL,QAAP,GAAkBxB,QAAQ,CAACE,EAA3B,CAAA;EACA,IAAA,OAAO8M,MAAP,CAAA;EACD,GA3EuB;EA6ExB;EACAW,EAAAA,MA9EwB,EA8Ef,SAAA,MAAA,GAAA;EACP,IAAA,IAAMX,MAAM,GAAG,IAAId,qBAAJ,CAA0B,QAA1B,EAAoC,IAApC,EAA0C,EAA1C,EAA8C,CAA9C,EAAiD,GAAjD,CAAf,CAAA;EACA,IAAA,OAAOc,MAAP,CAAA;EACD,GAjFuB;EAmFxB;EACAY,EAAAA,MApFwB,EAoFf,SAAA,MAAA,GAAA;EACP,IAAMZ,IAAAA,MAAM,GAAG,IAAId,qBAAJ,CAA0B,QAA1B,EAAoC,EAApC,EAAwC,EAAxC,CAAf,CAAA;EACAc,IAAAA,MAAM,CAACC,iBAAP,GACKD,cAAAA,CAAAA,cAAAA,CAAAA,EAAAA,EAAAA,MAAM,CAACC,iBADZ,CAAA,EAAA,EAAA,EAAA;EAEEnE,MAAAA,OAAO,EAAE,CAAC,CAFZ;EAGE2D,MAAAA,KAAK,EAAE,CAHT;EAIEC,MAAAA,GAAG,EAAE,CAJP;EAKEC,MAAAA,OAAO,EAAE,CAAA;EALX,KAAA,CAAA,CAAA;EAOA,IAAA,OAAOK,MAAP,CAAA;EACD,GA9FuB;EAgGxB;EACAa,EAAAA,KAjGwB,EAiGhB,SAAA,KAAA,GAAA;EACN,IAAO,OAAA,IAAI3B,qBAAJ,CAA0B,OAA1B,EAAmC,CAAnC,EAAsC,CAAtC,CAAP,CAAA;EACD,GAAA;EAnGuB;;ACH1B,MAAM4B,MAAM,GAAG;EACbC,EAAAA,IAAI,EAAE,MADO;EAEbC,EAAAA,OAAO,EAAE,SAFI;EAGbC,EAAAA,KAAK,EAAE,OAHM;EAIbC,EAAAA,GAAG,EAAE,KAJQ;EAKbC,EAAAA,OAAO,EAAE,SALI;EAMbC,EAAAA,IAAI,EAAE,MANO;EAObjO,EAAAA,IAAI,EAAE,MAAA;EAPO;;MCAMkO;EAKnB,EAAA,SAAA,cAAA,CAAYzL,GAAZ,EAAyB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAA;;EACvB,IAAA,IAAA,CAAK/B,KAAL,GAAa0B,IAAI,CAACO,KAAL,CAAWF,GAAX,CAAb,CAAA;EACA,IAAA,IAAA,CAAK7B,OAAL,GAAewB,IAAI,CAACO,KAAL,CAAW,CAACF,GAAG,GAAG,IAAA,CAAK/B,KAAZ,IAAqB,EAAhC,CAAf,CAAA;EACA,IAAKI,IAAAA,CAAAA,OAAL,GAAesB,IAAI,CAACO,KAAL,CACb,CAACF,GAAG,IAAI,IAAA,CAAK/B,KAAL,GAAa,IAAA,CAAKE,OAAL,GAAe,EAAhC,CAAJ,IAA2C,EAA3C,GAAgD,EADnC,CAAf,CAAA;EAGA,IAAA,OAAO,IAAP,CAAA;EACD,GAAA;;;;EAED,IAAA,KAAA,EAAA,SAAA,OAAA,CAAQR,IAAR,EAAsBE,KAAtB,EAAqCJ,IAArC,EAAyD;EACvD,MAAO,OAAA,IAAIc,IAAJ,CACLA,IAAI,CAACmN,GAAL,CAAS/N,IAAT,EAAeE,KAAf,EAAsBJ,IAAtB,EAA4B,IAAA,CAAKQ,KAAjC,EAAwC,IAAA,CAAKE,OAA7C,EAAsD,IAAA,CAAKE,OAA3D,CADK,CAAP,CAAA;EAGD,KAAA;;;;;;MCGkBsN;EASnB;EACA,EAAA,SAAA,WAAA,CACS3O,WADT,EAESS,IAFT,EAGSmO,qBAHT,EAIE;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;;EAAA,IAHO5O,IAAAA,CAAAA,WAGP,GAHOA,WAGP,CAAA;EAAA,IAFOS,IAAAA,CAAAA,IAEP,GAFOA,IAEP,CAAA;EAAA,IADOmO,IAAAA,CAAAA,qBACP,GADOA,qBACP,CAAA;EACA,IAAIpD,IAAAA,SAAS,GAAG,IAAIpB,SAAJ,CAAc3J,IAAd,EAAoBT,WAApB,CAAhB,CAAA;EAEA,IAAA,IAAI6O,QAAJ,CAAA;EACA,IAAA,IAAIC,WAAJ,CAAA;EACA,IAAA,IAAIC,SAAJ,CAAA;EACA,IAAA,IAAIC,OAAJ,CAAA;EACA,IAAA,IAAIC,UAAJ,CAAA;EACA,IAAA,IAAIC,WAAJ,CAAA;EACA,IAAA,IAAIC,QAAJ,CAAA;EAEA,IAAA,IAAIC,aAAJ,CAAA;EAEAL,IAAAA,SAAS,GAAG,IAAIN,cAAJ,CAAmBjD,SAAS,CAACb,OAA7B,CAAsC0E,CAAAA,OAAtC,CACV5O,IAAI,CAACG,WAAL,EADU,EAEVH,IAAI,CAACK,QAAL,EAFU,EAGVL,IAAI,CAACO,OAAL,EAHU,CAAZ,CAAA;EAKA8N,IAAAA,WAAW,GAAG,IAAIL,cAAJ,CAAmBjD,SAAS,CAACtC,OAA7B,CAAsCmG,CAAAA,OAAtC,CACZ5O,IAAI,CAACG,WAAL,EADY,EAEZH,IAAI,CAACK,QAAL,EAFY,EAGZL,IAAI,CAACO,OAAL,EAHY,CAAd,CAAA;EAKAiO,IAAAA,UAAU,GAAG,IAAIR,cAAJ,CAAmBjD,SAAS,CAAC/B,MAA7B,CAAqC4F,CAAAA,OAArC,CACX5O,IAAI,CAACG,WAAL,EADW,EAEXH,IAAI,CAACK,QAAL,EAFW,EAGXL,IAAI,CAACO,OAAL,EAHW,CAAb,CAAA;EAKA,IAAA,IAAM+K,QAAQ,GAAGvL,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAAjC,CAAA;EACA,IAAIuL,IAAAA,iBAAiB,GAAG,IAAI5B,SAAJ,CAAc2B,QAAd,EAAwB/L,WAAxB,CAAxB,CAAA;EAEA,IAAA,IAAMsP,mBAAmB,GAAGV,qBAAqB,CAACW,qBAAlD,CAAA;;EACA,IACE,IAAA,CAAC,CAACjN,WAAW,CAACwM,WAAD,CAAZ,IACC,CAACxM,WAAW,CAAC2M,UAAD,CADb,IAEC1M,KAAK,CAACyJ,iBAAiB,CAAC9C,OAAnB,CAFP,KAGAoG,mBAAmB,KAAKrE,qBAAqB,CAACG,UAJhD,EAKE;EAAA,MAAA,IAAA,eAAA,EAAA,gBAAA,EAAA,gBAAA,CAAA;;EACA,MAAMoE,IAAAA,QAAQ,GAAGrD,yBAAyB,CACxCmD,mBADwC,EAExC7O,IAFwC,EAGxCT,WAHwC,CAA1C,CAAA;EAKAwL,MAAAA,SAAS,GAAGgE,QAAQ,CAAChE,SAArB,CAAA;EACAQ,MAAAA,iBAAiB,GAAGwD,QAAQ,CAACxD,iBAA7B,CAAA;EACA,MAAA,IAAMyD,cAAc,GAAG,CACrBhP,IAAI,CAACG,WAAL,EADqB,EAErBH,IAAI,CAACK,QAAL,EAFqB,EAGrBL,IAAI,CAACO,OAAL,EAHqB,CAAvB,CAAA;EAMA+N,MAAAA,SAAS,GAAG,CAAIN,eAAAA,GAAAA,IAAAA,cAAJ,CAAmBjD,SAAS,CAACb,OAA7B,CAAsC0E,EAAAA,OAAtC,CACPI,KAAAA,CAAAA,eAAAA,EAAAA,cADO,CAAZ,CAAA;EAGAX,MAAAA,WAAW,GAAG,CAAIL,gBAAAA,GAAAA,IAAAA,cAAJ,CAAmBjD,SAAS,CAACtC,OAA7B,CAAsCmG,EAAAA,OAAtC,CACTI,KAAAA,CAAAA,gBAAAA,EAAAA,cADS,CAAd,CAAA;EAGAR,MAAAA,UAAU,GAAG,CAAIR,gBAAAA,GAAAA,IAAAA,cAAJ,CAAmBjD,SAAS,CAAC/B,MAA7B,CAAqC4F,EAAAA,OAArC,CACRI,KAAAA,CAAAA,gBAAAA,EAAAA,cADQ,CAAb,CAAA;EAGD,KA5DD;;;EA+DAT,IAAAA,OAAO,GAAG,IAAIP,cAAJ,CACRjD,SAAS,CAACkE,SAAV,CAAoBjQ,YAAY,CAACmP,qBAAqB,CAAClP,MAAvB,CAAhC,CADQ,CAER2P,CAAAA,OAFQ,CAEA5O,IAAI,CAACG,WAAL,EAFA,EAEoBH,IAAI,CAACK,QAAL,EAFpB,EAEqCL,IAAI,CAACO,OAAL,EAFrC,CAAV,CAAA;EAIA,IAAM2O,IAAAA,eAAe,GAAG,IAAIlB,cAAJ,CACtBzC,iBAAiB,CAAC9C,OADI,CAEtBmG,CAAAA,OAFsB,CAEdtD,QAAQ,CAACnL,WAAT,EAFc,EAEUmL,QAAQ,CAACjL,QAAT,EAFV,EAE+BiL,QAAQ,CAAC/K,OAAT,EAF/B,CAAxB,CAAA;EAGA,IAAA,IAAM4O,KAAK,GAAG,CAACC,MAAM,CAACF,eAAD,CAAN,GAA0BE,MAAM,CAACZ,UAAD,CAAjC,IAAiD,IAA/D,CAAA;EAEAJ,IAAAA,QAAQ,GAAG,IAAIJ,cAAJ,CACTjD,SAAS,CAACR,SAAV,CAAoB,CAAC,CAAD,GAAK4D,qBAAqB,CAACpC,SAA/C,EAA0D,KAA1D,CADS,CAET6C,CAAAA,OAFS,CAED5O,IAAI,CAACG,WAAL,EAFC,EAEmBH,IAAI,CAACK,QAAL,EAFnB,EAEoCL,IAAI,CAACO,OAAL,EAFpC,CAAX,CAxEA;;EA6EA,IACE4N,IAAAA,qBAAqB,CAACrC,MAAtB,KAAiC,uBAAjC,IACAvM,WAAW,CAACC,QAAZ,IAAwB,EAF1B,EAGE;EACAmP,MAAAA,aAAa,GAAGQ,KAAK,GAAG,CAAxB,CAAA;EACAf,MAAAA,QAAQ,GAAGpN,mBAAmB,CAACqN,WAAD,EAAc,CAACM,aAAf,CAA9B,CAAA;EACD,KAAA;;EAED,IAAMU,IAAAA,QAAQ,GAAI,YAAY;EAC5B,MAAA,IAAIlB,qBAAqB,CAACrC,MAAtB,KAAiC,uBAArC,EAA8D;EAC5D,QAAA,OAAOrK,YAAY,CAAC+G,6BAAb,CACLjJ,WAAW,CAACC,QADP,EAEL8B,SAAS,CAACtB,IAAD,CAFJ,EAGLA,IAAI,CAACG,WAAL,EAHK,EAILkO,WAJK,CAAP,CAAA;EAMD,OAPD,MAOO;EACL,QAAA,IAAMiB,OAAO,GAAGnB,qBAAqB,CAACoB,aAAtB,GAAsCpD,IAAtD,CAAA;EACAwC,QAAAA,aAAa,GAAGW,OAAO,GAAGH,KAA1B,CAAA;EACA,QAAA,OAAOnO,mBAAmB,CAACqN,WAAD,EAAc,CAACM,aAAf,CAA1B,CAAA;EACD,OAAA;EACF,KAbgB,EAAjB,CAAA;;EAeA,IAAI7M,IAAAA,KAAK,CAACsM,QAAQ,CAACnN,OAAT,EAAD,CAAL,IAA6BoO,QAAQ,GAAGjB,QAA5C,EAAsD;EACpDA,MAAAA,QAAQ,GAAGiB,QAAX,CAAA;EACD,KAAA;;EAED,IAAA,IAAIlB,qBAAqB,CAAClC,YAAtB,GAAqC,CAAzC,EAA4C;EAC1CyC,MAAAA,QAAQ,GAAG3N,mBAAmB,CAC5ByN,UAD4B,EAE5BL,qBAAqB,CAAClC,YAFM,CAA9B,CAAA;EAID,KALD,MAKO;EACLyC,MAAAA,QAAQ,GAAG,IAAIV,cAAJ,CACTjD,SAAS,CAACR,SAAV,CAAoB,CAAC,CAAD,GAAK4D,qBAAqB,CAACnC,SAA/C,EAA0D,IAA1D,CADS,CAET4C,CAAAA,OAFS,CAED5O,IAAI,CAACG,WAAL,EAFC,EAEmBH,IAAI,CAACK,QAAL,EAFnB,EAEoCL,IAAI,CAACO,OAAL,EAFpC,CAAX,CADK;;EAML,MACE4N,IAAAA,qBAAqB,CAACrC,MAAtB,KAAiC,uBAAjC,IACAvM,WAAW,CAACC,QAAZ,IAAwB,EAF1B,EAGE;EACAmP,QAAAA,aAAa,GAAGQ,KAAK,GAAG,CAAxB,CAAA;EACAT,QAAAA,QAAQ,GAAG1N,mBAAmB,CAACwN,UAAD,EAAaG,aAAb,CAA9B,CAAA;EACD,OAAA;;EAED,MAAMa,IAAAA,QAAQ,GAAI,YAAY;EAC5B,QAAA,IAAIrB,qBAAqB,CAACrC,MAAtB,KAAiC,uBAArC,EAA8D;EAC5D,UAAOrK,OAAAA,YAAY,CAACsH,6BAAb,CACLxJ,WAAW,CAACC,QADP,EAEL8B,SAAS,CAACtB,IAAD,CAFJ,EAGLA,IAAI,CAACG,WAAL,EAHK,EAILqO,UAJK,EAKLL,qBAAqB,CAAClF,MALjB,CAAP,CAAA;EAOD,SARD,MAQO;EACL,UAAA,IAAMqG,OAAO,GAAGnB,qBAAqB,CAACoB,aAAtB,GAAsChD,IAAtD,CAAA;EACAoC,UAAAA,aAAa,GAAGW,OAAO,GAAGH,KAA1B,CAAA;EACA,UAAA,OAAOnO,mBAAmB,CAACwN,UAAD,EAAaG,aAAb,CAA1B,CAAA;EACD,SAAA;EACF,OAdgB,EAAjB,CAAA;;EAgBA,MAAI7M,IAAAA,KAAK,CAAC4M,QAAQ,CAACzN,OAAT,EAAD,CAAL,IAA6BuO,QAAQ,GAAGd,QAA5C,EAAsD;EACpDA,QAAAA,QAAQ,GAAGc,QAAX,CAAA;EACD,OAAA;EACF,KAAA;;EAEDf,IAAAA,WAAW,GAAGD,UAAd,CAAA;;EACA,IAAIL,IAAAA,qBAAqB,CAACjC,YAA1B,EAAwC;EACtC,MAAA,IAAMuD,iBAAiB,GAAG,IAAIzB,cAAJ,CACxBjD,SAAS,CAACR,SAAV,CAAoB,CAAC,CAAD,GAAK4D,qBAAqB,CAACjC,YAA/C,EAA6D,IAA7D,CADwB,CAAA,CAExB0C,OAFwB,CAEhB5O,IAAI,CAACG,WAAL,EAFgB,EAEIH,IAAI,CAACK,QAAL,EAFJ,EAEqBL,IAAI,CAACO,OAAL,EAFrB,CAA1B,CAAA;;EAGA,MAAA,IAAIiO,UAAU,GAAGiB,iBAAb,IAAkCf,QAAQ,GAAGe,iBAAjD,EAAoE;EAClEhB,QAAAA,WAAW,GAAGgB,iBAAd,CAAA;EACD,OAAA;EACF,KAAA;;EAED,IAAA,IAAMC,cAAc,GAClB,CAACvB,qBAAqB,CAACwB,WAAtB,CAAkCxD,IAAlC,IAA0C,CAA3C,KACCgC,qBAAqB,CAACvB,iBAAtB,CAAwCT,IAAxC,IAAgD,CADjD,CADF,CAAA;EAGA,IAAA,IAAMyD,iBAAiB,GACrB,CAACzB,qBAAqB,CAACwB,WAAtB,CAAkClH,OAAlC,IAA6C,CAA9C,KACC0F,qBAAqB,CAACvB,iBAAtB,CAAwCnE,OAAxC,IAAmD,CADpD,CADF,CAAA;EAGA,IAAA,IAAMoH,eAAe,GACnB,CAAC1B,qBAAqB,CAACwB,WAAtB,CAAkCvD,KAAlC,IAA2C,CAA5C,KACC+B,qBAAqB,CAACvB,iBAAtB,CAAwCR,KAAxC,IAAiD,CADlD,CADF,CAAA;EAGA,IAAA,IAAM0D,aAAa,GACjB,CAAC3B,qBAAqB,CAACwB,WAAtB,CAAkCtD,GAAlC,IAAyC,CAA1C,KACC8B,qBAAqB,CAACvB,iBAAtB,CAAwCP,GAAxC,IAA+C,CADhD,CADF,CAAA;EAGA,IAAA,IAAM0D,iBAAiB,GACrB,CAAC5B,qBAAqB,CAACwB,WAAtB,CAAkCrD,OAAlC,IAA6C,CAA9C,KACC6B,qBAAqB,CAACvB,iBAAtB,CAAwCN,OAAxC,IAAmD,CADpD,CADF,CAAA;EAGA,IAAA,IAAM0D,cAAc,GAClB,CAAC7B,qBAAqB,CAACwB,WAAtB,CAAkCpD,IAAlC,IAA0C,CAA3C,KACC4B,qBAAqB,CAACvB,iBAAtB,CAAwCL,IAAxC,IAAgD,CADjD,CADF,CAAA;EAIA,IAAA,IAAA,CAAKJ,IAAL,GAAYjL,aAAa,CACvBH,mBAAmB,CAACqN,QAAD,EAAWsB,cAAX,CADI,EAEvBvB,qBAAqB,CAAChN,QAFC,CAAzB,CAAA;EAIA,IAAA,IAAA,CAAKsH,OAAL,GAAevH,aAAa,CAC1BH,mBAAmB,CAACsN,WAAD,EAAcuB,iBAAd,CADO,EAE1BzB,qBAAqB,CAAChN,QAFI,CAA5B,CAAA;EAIA,IAAA,IAAA,CAAKiL,KAAL,GAAalL,aAAa,CACxBH,mBAAmB,CAACuN,SAAD,EAAYuB,eAAZ,CADK,EAExB1B,qBAAqB,CAAChN,QAFE,CAA1B,CAAA;EAIA,IAAA,IAAA,CAAKkL,GAAL,GAAWnL,aAAa,CACtBH,mBAAmB,CAACwN,OAAD,EAAUuB,aAAV,CADG,EAEtB3B,qBAAqB,CAAChN,QAFA,CAAxB,CAAA;EAIA,IAAK6H,IAAAA,CAAAA,MAAL,GAAc9H,aAAa,CAACsN,UAAD,EAAaL,qBAAqB,CAAChN,QAAnC,CAA3B,CAAA;EACA,IAAA,IAAA,CAAKmL,OAAL,GAAepL,aAAa,CAC1BH,mBAAmB,CAAC0N,WAAD,EAAcsB,iBAAd,CADO,EAE1B5B,qBAAqB,CAAChN,QAFI,CAA5B,CAAA;EAIA,IAAA,IAAA,CAAKoL,IAAL,GAAYrL,aAAa,CACvBH,mBAAmB,CAAC2N,QAAD,EAAWsB,cAAX,CADI,EAEvB7B,qBAAqB,CAAChN,QAFC,CAAzB,CAAA;EAID,GAAA;;;;EAED,IAAA,KAAA,EAAA,SAAA,aAAA,CAAc8O,MAAd,EAA8C;EAC5C,MAAA,IAAIA,MAAM,KAAKxC,MAAM,CAACC,IAAtB,EAA4B;EAC1B,QAAA,OAAO,KAAKvB,IAAZ,CAAA;EACD,OAFD,MAEO,IAAI8D,MAAM,KAAKxC,MAAM,CAACE,OAAtB,EAA+B;EACpC,QAAA,OAAO,KAAKlF,OAAZ,CAAA;EACD,OAFM,MAEA,IAAIwH,MAAM,KAAKxC,MAAM,CAACG,KAAtB,EAA6B;EAClC,QAAA,OAAO,KAAKxB,KAAZ,CAAA;EACD,OAFM,MAEA,IAAI6D,MAAM,KAAKxC,MAAM,CAACI,GAAtB,EAA2B;EAChC,QAAA,OAAO,KAAKxB,GAAZ,CAAA;EACD,OAFM,MAEA,IAAI4D,MAAM,KAAKxC,MAAM,CAACK,OAAtB,EAA+B;EACpC,QAAA,OAAO,KAAKxB,OAAZ,CAAA;EACD,OAFM,MAEA,IAAI2D,MAAM,KAAKxC,MAAM,CAACM,IAAtB,EAA4B;EACjC,QAAA,OAAO,KAAKxB,IAAZ,CAAA;EACD,OAFM,MAEA;EACL,QAAA,OAAO,IAAP,CAAA;EACD,OAAA;EACF,KAAA;;;aAED,SAAiC,aAAA,GAAA;EAAA,MAAA,IAAnBvM,IAAmB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,IAAIc,IAAJ,EAAY,CAAA;;EAC/B,MAAA,IAAId,IAAI,IAAI,IAAKuM,CAAAA,IAAjB,EAAuB;EACrB,QAAOkB,OAAAA,MAAM,CAACM,IAAd,CAAA;EACD,OAFD,MAEO,IAAI/N,IAAI,IAAI,IAAA,CAAKsM,OAAjB,EAA0B;EAC/B,QAAOmB,OAAAA,MAAM,CAACK,OAAd,CAAA;EACD,OAFM,MAEA,IAAI9N,IAAI,IAAI,IAAA,CAAKqM,GAAjB,EAAsB;EAC3B,QAAOoB,OAAAA,MAAM,CAACI,GAAd,CAAA;EACD,OAFM,MAEA,IAAI7N,IAAI,IAAI,IAAA,CAAKoM,KAAjB,EAAwB;EAC7B,QAAOqB,OAAAA,MAAM,CAACG,KAAd,CAAA;EACD,OAFM,MAEA,IAAI5N,IAAI,IAAI,IAAA,CAAKyI,OAAjB,EAA0B;EAC/B,QAAOgF,OAAAA,MAAM,CAACE,OAAd,CAAA;EACD,OAFM,MAEA,IAAI3N,IAAI,IAAI,IAAA,CAAKmM,IAAjB,EAAuB;EAC5B,QAAOsB,OAAAA,MAAM,CAACC,IAAd,CAAA;EACD,OAFM,MAEA;EACL,QAAOD,OAAAA,MAAM,CAAC3N,IAAd,CAAA;EACD,OAAA;EACF,KAAA;;;aAED,SAA8B,UAAA,GAAA;EAAA,MAAA,IAAnBE,IAAmB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAZ,IAAIc,IAAJ,EAAY,CAAA;;EAC5B,MAAA,IAAId,IAAI,IAAI,IAAKuM,CAAAA,IAAjB,EAAuB;EACrB,QAAOkB,OAAAA,MAAM,CAAC3N,IAAd,CAAA;EACD,OAFD,MAEO,IAAIE,IAAI,IAAI,IAAA,CAAKsM,OAAjB,EAA0B;EAC/B,QAAOmB,OAAAA,MAAM,CAACM,IAAd,CAAA;EACD,OAFM,MAEA,IAAI/N,IAAI,IAAI,IAAA,CAAKqM,GAAjB,EAAsB;EAC3B,QAAOoB,OAAAA,MAAM,CAACK,OAAd,CAAA;EACD,OAFM,MAEA,IAAI9N,IAAI,IAAI,IAAA,CAAKoM,KAAjB,EAAwB;EAC7B,QAAOqB,OAAAA,MAAM,CAACI,GAAd,CAAA;EACD,OAFM,MAEA,IAAI7N,IAAI,IAAI,IAAA,CAAKyI,OAAjB,EAA0B;EAC/B,QAAOgF,OAAAA,MAAM,CAACG,KAAd,CAAA;EACD,OAFM,MAEA,IAAI5N,IAAI,IAAI,IAAA,CAAKmM,IAAjB,EAAuB;EAC5B,QAAOsB,OAAAA,MAAM,CAACE,OAAd,CAAA;EACD,OAFM,MAEA;EACL,QAAOF,OAAAA,MAAM,CAACC,IAAd,CAAA;EACD,OAAA;EACF,KAAA;;;;;;EC5RY,SAASwC,KAAT,CAAe3Q,WAAf,EAAyC;EACtD,EAAM4Q,IAAAA,MAAM,GAAG,IAAI1Q,WAAJ,CAAgB,UAAhB,EAA4B,UAA5B,CAAf,CADsD;;EAItD,EAAA,IAAM4D,KAAK,GAAGnB,IAAI,CAACkC,GAAL,CACZpC,gBAAgB,CAACmO,MAAM,CAACzQ,SAAR,CAAhB,GACEsC,gBAAgB,CAACzC,WAAW,CAACG,SAAb,CAFN,CAAd,CAAA;EAIA,EAAM4D,IAAAA,KAAK,GACTpB,IAAI,CAAC0C,GAAL,CAAS5C,gBAAgB,CAACzC,WAAW,CAACC,QAAb,CAAzB,CACA0C,GAAAA,IAAI,CAACmI,GAAL,CAASrI,gBAAgB,CAACmO,MAAM,CAAC3Q,QAAR,CAAzB,CAFF,CAAA;EAGA,EAAA,IAAM+D,KAAK,GACTrB,IAAI,CAACkC,GAAL,CAASpC,gBAAgB,CAACzC,WAAW,CAACC,QAAb,CAAzB,IACA0C,IAAI,CAAC0C,GAAL,CACE5C,gBAAgB,CAACmO,MAAM,CAACzQ,SAAR,CAAhB,GACEsC,gBAAgB,CAACzC,WAAW,CAACG,SAAb,CAFpB,CAFF,CAAA;EAMA,EAAMiD,IAAAA,KAAK,GAAGT,IAAI,CAACuH,KAAL,CAAWpG,KAAX,EAAkBC,KAAK,GAAGC,KAA1B,CAAd,CAAA;EAEA,EAAA,OAAOb,WAAW,CAACN,gBAAgB,CAACO,KAAD,CAAjB,CAAlB,CAAA;EACD;;MChBoByN,wCAInB,SAAYC,WAAAA,CAAAA,WAAZ,EAAsC;EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;;EACpC,EAAA,IAAMrQ,IAAI,GAAGqQ,WAAW,CAACrQ,IAAzB,CAAA;EACA,EAAA,IAAMsQ,OAAO,GAAGvQ,gBAAgB,CAACC,IAAD,EAAO,CAAP,CAAhC,CAAA;EACA,EAAA,IAAMuQ,kBAAkB,GAAG,IAAIrC,WAAJ,CACzBmC,WAAW,CAAC9Q,WADa,EAEzB+Q,OAFyB,EAGzBD,WAAW,CAAClC,qBAHa,CAA3B,CAAA;EAMA,EAAA,IAAMqC,aAAa,GACjB,CAACD,kBAAkB,CAACpE,IAAnB,CAAwBlL,OAAxB,EAAoCoP,GAAAA,WAAW,CAAC/D,OAAZ,CAAoBrL,OAApB,EAArC,IACA,MAFF,CAAA;EAIA,EAAA,IAAA,CAAKwP,gBAAL,GAAwBvP,aAAa,CACnCF,mBAAmB,CAACqP,WAAW,CAAC/D,OAAb,EAAsBkE,aAAa,GAAG,CAAtC,CADgB,CAArC,CAAA;EAGA,EAAA,IAAA,CAAKE,mBAAL,GAA2BxP,aAAa,CACtCF,mBAAmB,CAACqP,WAAW,CAAC/D,OAAb,EAAsBkE,aAAa,IAAI,CAAA,GAAI,CAAR,CAAnC,CADmB,CAAxC,CAAA;EAGD;;;;;;;;;;;;;;;;;;;;;"}