{"version":3,"sources":["../../src/CalculationParameters.ts"],"names":["Madhab","HighLatitudeRule","PolarCircleResolution","Rounding","Shafaq","CalculationParameters","madhab","Shafi","highLatitudeRule","MiddleOfTheNight","adjustments","fajr","sunrise","dhuhr","asr","maghrib","isha","methodAdjustments","polarCircleResolution","Unresolved","rounding","Nearest","shafaq","General","constructor","method","fajrAngle","ishaAngle","ishaInterval","maghribAngle","nightPortions","SeventhOfTheNight","TwilightAngle"],"mappings":"AACA,SAASA,MAAT,QAAuB,UAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAGA,eAAe,MAAMC,qBAAN,CAA4B;AACzC;AACAC,EAAAA,MAAM,GAA2BN,MAAM,CAACO,KAAlC,CAFmC,CAIzC;AACA;AACA;;AACAC,EAAAA,gBAAgB,GACdP,gBAAgB,CAACQ,gBADH,CAPyB,CAUzC;;AACAC,EAAAA,WAAW,GAAG;AACZC,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,OAAO,EAAE,CAFG;AAGZC,IAAAA,KAAK,EAAE,CAHK;AAIZC,IAAAA,GAAG,EAAE,CAJO;AAKZC,IAAAA,OAAO,EAAE,CALG;AAMZC,IAAAA,IAAI,EAAE;AANM,GAAH,CAX8B,CAoBzC;;AACAC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,IAAI,EAAE,CADY;AAElBC,IAAAA,OAAO,EAAE,CAFS;AAGlBC,IAAAA,KAAK,EAAE,CAHW;AAIlBC,IAAAA,GAAG,EAAE,CAJa;AAKlBC,IAAAA,OAAO,EAAE,CALS;AAMlBC,IAAAA,IAAI,EAAE;AANY,GAAH,CArBwB,CA8BzC;AACA;AACA;;AACAE,EAAAA,qBAAqB,GACnBhB,qBAAqB,CAACiB,UADH,CAjCoB,CAoCzC;;AACAC,EAAAA,QAAQ,GAA6BjB,QAAQ,CAACkB,OAAtC,CArCiC,CAuCzC;;AACAC,EAAAA,MAAM,GAA2BlB,MAAM,CAACmB,OAAlC;;AAENC,EAAAA,WAAW,EACT;AACA;AACOC,EAAAA,MAHE,EAIT;AACOC,EAAAA,SAAS,GAAG,CALV,EAMT;AACOC,EAAAA,SAAS,GAAG,CAPV,EAQT;AACA;AACOC,EAAAA,YAAY,GAAG,CAVb,EAWT;AACA;AACOC,EAAAA,YAAY,GAAG,CAbb,EAcT;AAAA,SAXOJ,MAWP,GAXOA,MAWP;AAAA,SATOC,SASP,GATOA,SASP;AAAA,SAPOC,SAOP,GAPOA,SAOP;AAAA,SAJOC,YAIP,GAJOA,YAIP;AAAA,SADOC,YACP,GADOA,YACP;;AACA,QAAI,KAAKJ,MAAL,KAAgB,IAApB,EAA0B;AACxB;AACA,WAAKA,MAAL,GAAc,OAAd;AACD;AACF;;AAEDK,EAAAA,aAAa,GAAG;AACd,YAAQ,KAAKtB,gBAAb;AACE,WAAKP,gBAAgB,CAACQ,gBAAtB;AACE,eAAO;AAAEE,UAAAA,IAAI,EAAE,IAAI,CAAZ;AAAeK,UAAAA,IAAI,EAAE,IAAI;AAAzB,SAAP;;AACF,WAAKf,gBAAgB,CAAC8B,iBAAtB;AACE,eAAO;AAAEpB,UAAAA,IAAI,EAAE,IAAI,CAAZ;AAAeK,UAAAA,IAAI,EAAE,IAAI;AAAzB,SAAP;;AACF,WAAKf,gBAAgB,CAAC+B,aAAtB;AACE,eAAO;AAAErB,UAAAA,IAAI,EAAE,KAAKe,SAAL,GAAiB,EAAzB;AAA6BV,UAAAA,IAAI,EAAE,KAAKW,SAAL,GAAiB;AAApD,SAAP;;AACF;AACE,cAAO,+EAA8E,KAAKnB,gBAAiB,EAA3G;AARJ;AAUD;;AA1EwC","sourcesContent":["import type CalculationMethod from './CalculationMethod';\nimport { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport { PolarCircleResolution } from './PolarCircleResolution';\nimport { Rounding } from './Rounding';\nimport { Shafaq } from './Shafaq';\nimport { ValueOf } from './TypeUtils';\n\nexport default class CalculationParameters {\n  // Madhab to determine how Asr is calculated.\n  madhab: ValueOf<typeof Madhab> = Madhab.Shafi;\n\n  // Rule to determine the earliest time for Fajr and latest time for Isha\n  // needed for high latitude locations where Fajr and Isha may not truly exist\n  // or may present a hardship unless bound to a reasonable time.\n  highLatitudeRule: ValueOf<typeof HighLatitudeRule> =\n    HighLatitudeRule.MiddleOfTheNight;\n\n  // Manual adjustments (in minutes) to be added to each prayer time.\n  adjustments = {\n    fajr: 0,\n    sunrise: 0,\n    dhuhr: 0,\n    asr: 0,\n    maghrib: 0,\n    isha: 0,\n  };\n\n  // Adjustments set by a calculation method. This value should not be manually modified.\n  methodAdjustments = {\n    fajr: 0,\n    sunrise: 0,\n    dhuhr: 0,\n    asr: 0,\n    maghrib: 0,\n    isha: 0,\n  };\n\n  // Rule to determine how to resolve prayer times inside the Polar Circle\n  // where daylight or night may persist for more than 24 hours depending\n  // on the season\n  polarCircleResolution: ValueOf<typeof PolarCircleResolution> =\n    PolarCircleResolution.Unresolved;\n\n  // How seconds are rounded when calculating prayer times\n  rounding: ValueOf<typeof Rounding> = Rounding.Nearest;\n\n  // Used by the MoonsightingCommittee method to determine how to calculate Isha\n  shafaq: ValueOf<typeof Shafaq> = Shafaq.General;\n\n  constructor(\n    // Name of the method, can be used to apply special behavior in calculations.\n    // This property should not be manually modified.\n    public method: null | keyof typeof CalculationMethod,\n    // Angle of the sun below the horizon used for calculating Fajr.\n    public fajrAngle = 0,\n    // Angle of the sun below the horizon used for calculating Isha.\n    public ishaAngle = 0,\n    // Minutes after Maghrib to determine time for Isha\n    // if this value is greater than 0 then ishaAngle is not used.\n    public ishaInterval = 0,\n    // Angle of the sun below the horizon used for calculating Maghrib.\n    // Only used by the Tehran method to account for lightness in the sky.\n    public maghribAngle = 0,\n  ) {\n    if (this.method === null) {\n      // we don't want a breaking change\n      this.method = 'Other';\n    }\n  }\n\n  nightPortions() {\n    switch (this.highLatitudeRule) {\n      case HighLatitudeRule.MiddleOfTheNight:\n        return { fajr: 1 / 2, isha: 1 / 2 };\n      case HighLatitudeRule.SeventhOfTheNight:\n        return { fajr: 1 / 7, isha: 1 / 7 };\n      case HighLatitudeRule.TwilightAngle:\n        return { fajr: this.fajrAngle / 60, isha: this.ishaAngle / 60 };\n      default:\n        throw `Invalid high latitude rule found when attempting to compute night portions: ${this.highLatitudeRule}`;\n    }\n  }\n}\n"],"file":"CalculationParameters.js"}